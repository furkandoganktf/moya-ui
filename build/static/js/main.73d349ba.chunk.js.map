{"version":3,"sources":["assets/img/card-primary.png","constants/alertConstants.js","actions/alertActions.js","constants/userConstants.js","helpers/history.js","reducers/authenticationReducer.js","constants/customerConstants.js","constants/supplierConstants.js","constants/brandConstants.js","constants/productConstants.js","reducers/index.js","reducers/usersReducer.js","reducers/alertReducer.js","reducers/customerReducer.js","reducers/supplierReducer.js","reducers/brandReducer.js","reducers/productReducer.js","helpers/store.js","helpers/authHeader.js","constants/urlConstants.js","services/handler.js","services/userService.js","components/Sidebar/Sidebar.js","services/customerService.js","services/supplierService.js","services/brandService.js","services/productService.js","actions/userActions.js","actions/customerActions.js","actions/supplierActions.js","actions/brandActions.js","actions/productActions.js","components/CustomForm.js","views/Users.js","views/Customers.js","views/Suppliers.js","views/Brands.js","views/Login.js","views/Logs.js","views/Stocks.js","views/Packages.js","views/Boxes.js","views/Materials.js","layouts/Admin/Admin.js","routes.js","components/Footer/Footer.js","layouts/Auth/Auth.js","components/PrivateRoute.js","App.js","index.js"],"names":["module","exports","alertConstants","alertActions","success","message","type","error","clear","userConstants","history","createHashHistory","user","JSON","parse","localStorage","getItem","initialState","loggedIn","customerConstants","supplierConstants","brandConstants","productConstants","rootReducer","combineReducers","authentication","state","action","loggingIn","users","registering","loading","items","data","alert","customers","adding","suppliers","brands","products","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","Authorization","currenturl","urlConstants","handleResponse","response","text","then","ok","status","userService","logout","window","location","reload","statusText","Promise","reject","ps","login","username","password","a","requestOptions","method","headers","body","stringify","fetch","setItem","getAll","getById","id","register","update","_delete","getLogs","getStockLogs","removeItem","delete","customerService","add","customer","supplierService","supplier","brandService","brand","product","packageProduct","stockUpdate","productService","request","failure","userActions","dispatch","push","customerActions","supplierActions","brandActions","productActions","Sidebar","props","getCollapseStates","routes","map","prop","key","collapse","getCollapseInitialState","views","createLinks","rtlActive","redirect","st","className","href","data-toggle","aria-expanded","onClick","e","preventDefault","setState","undefined","icon","style","fontSize","fontWeight","rtlName","name","rtlMini","mini","Collapse","isOpen","marginLeft","activeRoute","layout","path","to","activeClassName","closeSidebar","lineHeight","routeName","pathname","indexOf","i","length","this","navigator","platform","PerfectScrollbar","refs","sidebar","destroy","activeColor","logo","logoImg","logoText","outterLink","target","src","imgSrc","alt","width","innerLink","ref","Nav","React","Component","CustomForm","useForm","control","handleSubmit","errors","watch","materialCount","packageCount","materials","packages","spec","validate","form","_","get","rules","minLength","maxLength","Form","Card","CardHeader","CardTitle","tag","CardBody","forms","index","value","options","filter","o","label","companyName","FormGroup","display","justifyContent","flexDirection","marginBottom","float","textAlign","as","Select","placeholder","defaultValue","color","Input","n","rows","slice","item","stock","getMaterials","getPackages","CardFooter","Button","onCancel","onSubmit","onError","submitText","UsersPage","componentDidMount","hideAlert","addUser","notify","dataLoaded","updateUser","deleteUser","console","log","deleteUserAlert","danger","showCancel","onConfirm","title","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","updateUserAlert","backgroundColor","showConfirm","required","surname","userName","addUserAlert","notType","place","autoDismiss","notificationAlertRef","current","notificationAlert","toggleBlocking","blocking","loaderType","createRef","actions","obj","find","size","classNames","keepInView","loader","active","Row","Col","xs","md","minHeight","sorted","sortOptions","resizable","columns","Header","accessor","sortable","filterable","showPaginationTop","showPaginationBottom","minRows","defaultPageSize","nextText","previousText","pageText","rowsText","noDataText","actionCreators","connectedUsersPage","connect","CustomersPage","addCustomer","updateCustomer","deleteCustomer","deleteCustomerAlert","updateCustomerAlert","province","district","phone","notes","addCustomerAlert","connectedCustomersPage","SuppliersPage","addSupplier","updateSupplier","deleteSupplier","deleteSupplierAlert","updateSupplierAlert","country","addSupplierAlert","connectedSuppliersPage","BrandsPage","getSuppliers","addBrand","updateBrand","deleteBrand","deleteBrandAlert","updateBrandAlert","addBrandAlert","connectedBrandsPage","LoginPage","handleChange","submitted","document","classList","toggle","Container","lg","require","String","InputGroup","InputGroupAddon","addonType","InputGroupText","onChange","block","connectedLoginPage","Logs","logs","desc","show","StockLogs","getBrands","getCustomers","getProducts","onYearSelect","selectedYear","onMonthSelect","selectedMonth","onTypeSelect","selectedType","createReport","endDate","startDate","Date","getTime","reportData","timeStamp","productType","sort","b","brandName","supplierName","oldStock","newStock","date","splice","downloadLink","createElement","csvContent","join","blob","Blob","url","URL","createObjectURL","download","appendChild","click","removeChild","createReportForm","customStyles","menu","provided","height","menuList","yearOptions","styles","monthOptions","typeOptions","startYear","currentYear","getFullYear","Array","keys","from","toLocaleDateString","month","productId","productName","renderChildren","defaultSorted","connectedProductsPage","PackagesPage","addProduct","parseInt","updateProduct","oldProduct","newProduct","deleteProduct","deleteProductAlert","updateProductAlert","formName","min","threshold","addProductAlert","getTrProps","rowInfo","column","row","background","_original","BoxedProductsPage","content","boxed_product","amount","defaultSupplierValue","defaultBrandValue","Object","entries","MaterialsPage","component","AdminLayout","componentGracefulUnmount","removeEventListener","showNavbarButton","documentElement","scrollTop","scrollingElement","mainPanelRef","opacity","getRoutes","render","authInfo","toggleSidebar","sidebarOpened","remove","handleMiniClick","contains","sidebarMini","isSidebar","sm","UncontrolledTooltip","delay","placement","xl","paddingLeft","toggled","tables","querySelectorAll","addEventListener","Footer","default","fluid","AuthLayout","getActiveRoute","collapseActiveRoute","getFullPageName","PrivateRoute","rest","App","listen","clearAlerts","Auth","connectedApp","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.73d349ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card-primary.3f053d33.png\";","export const alertConstants = {\n  SUCCESS: 'ALERT_SUCCESS',\n  ERROR: 'ALERT_ERROR',\n  CLEAR: 'ALERT_CLEAR',\n};\n","import {alertConstants} from 'constants/alertConstants';\n\nexport const alertActions = {\n  success,\n  error,\n  clear,\n};\n\nfunction success(message) {\n  return {type: alertConstants.SUCCESS, message};\n}\n\nfunction error(message) {\n  return {type: alertConstants.ERROR, message};\n}\n\nfunction clear() {\n  return {type: alertConstants.CLEAR};\n}\n","export const userConstants = {\n  REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n  REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n  LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n  LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n  LOGOUT: 'USERS_LOGOUT',\n\n  GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n  GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n  GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n\n  DELETE_REQUEST: 'USERS_DELETE_REQUEST',\n  DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\n  DELETE_FAILURE: 'USERS_DELETE_FAILURE',\n\n  UPDATE_REQUEST: 'USERS_UPDATE_REQUEST',\n  UPDATE_SUCCESS: 'USERS_UPDATE_SUCCESS',\n  UPDATE_FAILURE: 'USERS_UPDATE_FAILURE',\n};\n","import {createHashHistory} from 'history';\n\nexport const history = createHashHistory();\n","import {userConstants} from 'constants/userConstants';\n\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? {loggedIn: true, user} : {};\n\nexport function authentication(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        user: action.user,\n      };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n        user: action.user,\n      };\n    case userConstants.LOGIN_FAILURE:\n      return {};\n    case userConstants.LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n}\n","export const customerConstants = {\n  ADD_REQUEST: 'CUSTOMERS_ADD_REQUEST',\n  ADD_SUCCESS: 'CUSTOMERS_ADD_SUCCESS',\n  ADD_FAILURE: 'CUSTOMERS_ADD_FAILURE',\n\n  GETALL_REQUEST: 'CUSTOMERS_GETALL_REQUEST',\n  GETALL_SUCCESS: 'CUSTOMERS_GETALL_SUCCESS',\n  GETALL_FAILURE: 'CUSTOMERS_GETALL_FAILURE',\n\n  DELETE_REQUEST: 'CUSTOMERS_DELETE_REQUEST',\n  DELETE_SUCCESS: 'CUSTOMERS_DELETE_SUCCESS',\n  DELETE_FAILURE: 'CUSTOMERS_DELETE_FAILURE',\n\n  UPDATE_REQUEST: 'CUSTOMERS_UPDATE_REQUEST',\n  UPDATE_SUCCESS: 'CUSTOMERS_UPDATE_SUCCESS',\n  UPDATE_FAILURE: 'CUSTOMERS_UPDATE_FAILURE',\n};\n","export const supplierConstants = {\n  ADD_REQUEST: 'SUPPLIERS_ADD_REQUEST',\n  ADD_SUCCESS: 'SUPPLIERS_ADD_SUCCESS',\n  ADD_FAILURE: 'SUPPLIERS_ADD_FAILURE',\n\n  GETALL_REQUEST: 'SUPPLIERS_GETALL_REQUEST',\n  GETALL_SUCCESS: 'SUPPLIERS_GETALL_SUCCESS',\n  GETALL_FAILURE: 'SUPPLIERS_GETALL_FAILURE',\n\n  DELETE_REQUEST: 'SUPPLIERS_DELETE_REQUEST',\n  DELETE_SUCCESS: 'SUPPLIERS_DELETE_SUCCESS',\n  DELETE_FAILURE: 'SUPPLIERS_DELETE_FAILURE',\n\n  UPDATE_REQUEST: 'SUPPLIERS_UPDATE_REQUEST',\n  UPDATE_SUCCESS: 'SUPPLIERS_UPDATE_SUCCESS',\n  UPDATE_FAILURE: 'SUPPLIERS_UPDATE_FAILURE',\n};\n","export const brandConstants = {\n  ADD_REQUEST: 'BRANDS_ADD_REQUEST',\n  ADD_SUCCESS: 'BRANDS_ADD_SUCCESS',\n  ADD_FAILURE: 'BRANDS_ADD_FAILURE',\n\n  GETALL_REQUEST: 'BRANDS_GETALL_REQUEST',\n  GETALL_SUCCESS: 'BRANDS_GETALL_SUCCESS',\n  GETALL_FAILURE: 'BRANDS_GETALL_FAILURE',\n\n  DELETE_REQUEST: 'BRANDS_DELETE_REQUEST',\n  DELETE_SUCCESS: 'BRANDS_DELETE_SUCCESS',\n  DELETE_FAILURE: 'BRANDS_DELETE_FAILURE',\n\n  UPDATE_REQUEST: 'BRANDS_UPDATE_REQUEST',\n  UPDATE_SUCCESS: 'BRANDS_UPDATE_SUCCESS',\n  UPDATE_FAILURE: 'BRANDS_UPDATE_FAILURE',\n};\n","export const productConstants = {\n  ADD_REQUEST: 'PRODUCTS_ADD_REQUEST',\n  ADD_SUCCESS: 'PRODUCTS_ADD_SUCCESS',\n  ADD_FAILURE: 'PRODUCTS_ADD_FAILURE',\n\n  GETALL_REQUEST: 'PRODUCTS_GETALL_REQUEST',\n  GETALL_SUCCESS: 'PRODUCTS_GETALL_SUCCESS',\n  GETALL_FAILURE: 'PRODUCTS_GETALL_FAILURE',\n\n  DELETE_REQUEST: 'PRODUCTS_DELETE_REQUEST',\n  DELETE_SUCCESS: 'PRODUCTS_DELETE_SUCCESS',\n  DELETE_FAILURE: 'PRODUCTS_DELETE_FAILURE',\n\n  UPDATE_REQUEST: 'PRODUCTS_UPDATE_REQUEST',\n  UPDATE_SUCCESS: 'PRODUCTS_UPDATE_SUCCESS',\n  UPDATE_FAILURE: 'PRODUCTS_UPDATE_FAILURE',\n};\n","import {combineReducers} from 'redux';\nimport {authentication} from './authenticationReducer';\nimport {users} from './usersReducer';\nimport {alert} from './alertReducer';\nimport {customers} from './customerReducer';\nimport {suppliers} from './supplierReducer';\nimport {brands} from './brandReducer';\nimport {products} from './productReducer';\n\nconst rootReducer = combineReducers({\n  authentication,\n  users,\n  alert,\n  customers,\n  suppliers,\n  brands,\n  products,\n});\n\nexport default rootReducer;\n","import {userConstants} from 'constants/userConstants';\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.REGISTER_REQUEST:\n      return {...state, registering: true};\n    case userConstants.GETALL_REQUEST:\n      return {...state, loading: true};\n    case userConstants.GETALL_SUCCESS:\n      return {...state, items: action.data};\n    case userConstants.GETALL_FAILURE:\n      return {...state, error: action.error};\n    case userConstants.DELETE_FAILURE:\n      return {...state, error: action.error};\n    case userConstants.UPDATE_FAILURE:\n      return {...state, error: action.error};\n    default:\n      return state;\n  }\n}\n","import {alertConstants} from 'constants/alertConstants';\n\nexport function alert(state = {}, action) {\n  switch (action.type) {\n    case alertConstants.SUCCESS:\n      return {\n        type: 'alert-success',\n        message: action.message,\n      };\n    case alertConstants.ERROR:\n      return {\n        type: 'alert-danger',\n        message: action.message,\n      };\n    case alertConstants.CLEAR:\n      return {};\n    default:\n      return state;\n  }\n}\n","import {customerConstants} from 'constants/customerConstants';\n\nexport function customers(state = {}, action) {\n  switch (action.type) {\n    case customerConstants.ADD_REQUEST:\n      return {...state, adding: true};\n    case customerConstants.GETALL_REQUEST:\n      return {...state, loading: true};\n    case customerConstants.GETALL_SUCCESS:\n      return {...state, items: action.data};\n    case customerConstants.GETALL_FAILURE:\n      return {...state, error: action.error};\n    case customerConstants.DELETE_FAILURE:\n      return {...state, error: action.error};\n    case customerConstants.UPDATE_FAILURE:\n      return {...state, error: action.error};\n    default:\n      return state;\n  }\n}\n","import {supplierConstants} from 'constants/supplierConstants';\n\nexport function suppliers(state = {}, action) {\n  switch (action.type) {\n    case supplierConstants.ADD_REQUEST:\n      return {...state, adding: true};\n    case supplierConstants.GETALL_REQUEST:\n      return {...state, loading: true};\n    case supplierConstants.GETALL_SUCCESS:\n      return {...state, items: action.data};\n    case supplierConstants.GETALL_FAILURE:\n      return {...state, error: action.error};\n    case supplierConstants.DELETE_FAILURE:\n      return {...state, error: action.error};\n    case supplierConstants.UPDATE_FAILURE:\n      return {...state, error: action.error};\n    default:\n      return state;\n  }\n}\n","import {brandConstants} from 'constants/brandConstants';\n\nexport function brands(state = {}, action) {\n  switch (action.type) {\n    case brandConstants.ADD_REQUEST:\n      return {...state, adding: true};\n    case brandConstants.GETALL_REQUEST:\n      return {...state, loading: true};\n    case brandConstants.GETALL_SUCCESS:\n      return {...state, items: action.data};\n    case brandConstants.GETALL_FAILURE:\n      return {...state, error: action.error};\n    case brandConstants.DELETE_FAILURE:\n      return {...state, error: action.error};\n    case brandConstants.UPDATE_FAILURE:\n      return {...state, error: action.error};\n    default:\n      return state;\n  }\n}\n","import {productConstants} from 'constants/productConstants';\n\nexport function products(state = {}, action) {\n  switch (action.type) {\n    case productConstants.ADD_REQUEST:\n      return {...state, adding: true};\n    case productConstants.ADD_SUCCESS:\n      return {...state};\n    case productConstants.ADD_FAILURE:\n      return {...state};\n    case productConstants.GETALL_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case productConstants.GETALL_SUCCESS:\n      return {\n        ...state,\n        items: action.data,\n      };\n    case productConstants.GETALL_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case productConstants.DELETE_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case productConstants.UPDATE_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from 'reducers';\n\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunkMiddleware)),\n  );\n}\n\nexport {store};\n","export function authHeader() {\n  // return authorization header with jwt token\n  let user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    return {Authorization: 'Bearer ' + user.token};\n  } else {\n    return {};\n  }\n}\n","let localhost = 'localhost:3000';\nlet localurl = '3.12.220.9:3000';\nlet currenturl = '';\nlet currentSetting = 1;\n\nif (currentSetting === 1) currenturl = localurl;\nelse currenturl = localhost;\n\nexport const urlConstants = {\n  BASE_URL: currenturl,\n  REQUEST_URL: 'http://' + currenturl,\n};\n","import {userService} from 'services';\n\nexport default function handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        userService.logout();\n        window.location.reload();\n      }\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n    return data;\n  });\n}\n","import {authHeader} from 'helpers';\nimport {urlConstants} from 'constants/urlConstants';\nimport handleResponse from 'services/handler';\n\nconst login = async (username, password) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({username, password}),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + '/users/authenticate',\n    requestOptions,\n  );\n  const user = await handleResponse(response);\n  // store user details and jwt token in local storage to keep user logged in between page refreshes\n  localStorage.setItem('user', JSON.stringify(user));\n  return user;\n};\n\nconst logout = () => {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n};\n\nconst getAll = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + '/users',\n    requestOptions,\n  );\n  const users = await handleResponse(response);\n  return users;\n};\n\nconst getById = async id => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/users/${id}`,\n    requestOptions,\n  );\n  const users = await handleResponse(response);\n  return users;\n};\n\nconst register = async user => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(user),\n  };\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/users/register`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nconst update = async user => {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(user),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/users/${user.id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nconst _delete = async id => {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/users/${id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nexport const getLogs = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/logs`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nexport const getStockLogs = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/stockLogs`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nexport const userService = {\n  login,\n  logout,\n  register,\n  getAll,\n  getById,\n  update,\n  delete: _delete,\n};\n","/*eslint-disable*/\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport {Nav, Collapse} from 'reactstrap';\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getCollapseStates(props.routes);\n  }\n  // this creates the intial state of this component based on the collapse routes\n  // that it gets through this.props.routes\n  getCollapseStates = routes => {\n    let initialState = {};\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        initialState = {\n          [prop.state]: this.getCollapseInitialState(prop.views),\n          ...this.getCollapseStates(prop.views),\n          ...initialState,\n        };\n      }\n      return null;\n    });\n    return initialState;\n  };\n  // this verifies if any of the collapses should be default opened on a rerender of this component\n  // for example, on the refresh of the page,\n  // while on the src/views/forms/RegularForms.jsx - route /admin/regular-forms\n  getCollapseInitialState(routes) {\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\n        return true;\n      } else if (window.location.href.indexOf(routes[i].path) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  createLinks = routes => {\n    const {rtlActive} = this.props;\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.collapse) {\n        var st = {};\n        st[prop['state']] = !this.state[prop.state];\n        return (\n          <li\n            className={this.getCollapseInitialState(prop.views) ? 'active' : ''}\n            key={key}\n          >\n            <a\n              href=\"#pablo\"\n              data-toggle=\"collapse\"\n              aria-expanded={this.state[prop.state]}\n              onClick={e => {\n                e.preventDefault();\n                this.setState(st);\n              }}\n            >\n              {prop.icon !== undefined ? (\n                <>\n                  <i className={prop.icon} />\n                  <p style={{fontSize: '1rem', fontWeight: 'bold'}}>\n                    {rtlActive ? prop.rtlName : prop.name}\n                    <b className=\"caret\" />\n                  </p>\n                </>\n              ) : (\n                <>\n                  <span\n                    className=\"sidebar-mini-icon\"\n                    style={{fontSize: '0.75rem', fontWeight: 'bold'}}\n                  >\n                    {rtlActive ? prop.rtlMini : prop.mini}\n                  </span>\n                  <span\n                    className=\"sidebar-normal\"\n                    style={{fontSize: '0.75rem', fontWeight: 'bold'}}\n                  >\n                    {rtlActive ? prop.rtlName : prop.name}\n                    <b className=\"caret\" />\n                  </span>\n                </>\n              )}\n            </a>\n            <Collapse isOpen={this.state[prop.state]}>\n              <ul className=\"nav\" style={{marginLeft: '15px'}}>\n                {this.createLinks(prop.views)}\n              </ul>\n            </Collapse>\n          </li>\n        );\n      }\n      return (\n        <li className={this.activeRoute(prop.layout + prop.path)} key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            activeClassName=\"\"\n            onClick={this.props.closeSidebar}\n          >\n            {prop.icon !== undefined ? (\n              <>\n                <i className={prop.icon} style={{lineHeight: '30px'}} />\n                <p style={{fontSize: '1rem', fontWeight: 'bold'}}>\n                  {rtlActive ? prop.rtlName : prop.name}\n                </p>\n              </>\n            ) : (\n              <>\n                <span\n                  className=\"sidebar-mini-icon\"\n                  style={{fontSize: '0.75rem', fontWeight: 'bold'}}\n                >\n                  {rtlActive ? prop.rtlMini : prop.mini}\n                </span>\n                <span\n                  className=\"sidebar-normal\"\n                  style={{fontSize: '0.75rem', fontWeight: 'bold'}}\n                >\n                  {rtlActive ? prop.rtlName : prop.name}\n                </span>\n              </>\n            )}\n          </NavLink>\n        </li>\n      );\n    });\n  };\n  // verifies if routeName is the one active (in browser input)\n  activeRoute = routeName => {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\n  };\n  componentDidMount() {\n    // if you are using a Windows Machine, the scrollbars will have a Mac look\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar);\n    }\n  }\n  componentWillUnmount() {\n    // we need to destroy the false scrollbar when we navigate\n    // to a page that doesn't have this component rendered\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    const {activeColor, logo} = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.closeSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" style={{width: '50px'}} />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.closeSidebar}\n            style={{fontSize: '1rem', fontWeight: 'bold'}}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <NavLink\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.closeSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </NavLink>\n        );\n        logoText = (\n          <NavLink\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.closeSidebar}\n          >\n            {logo.text}\n          </NavLink>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={activeColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>{this.createLinks(this.props.routes)}</Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  activeColor: PropTypes.oneOf(['primary', 'blue', 'green', 'orange', 'red']),\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.array.isRequired,\n  logo: PropTypes.oneOfType([\n    PropTypes.shape({\n      innerLink: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    }),\n    PropTypes.shape({\n      outterLink: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    }),\n  ]),\n  // this is used on responsive to close the sidebar on route navigation\n  closeSidebar: PropTypes.func,\n};\n\nexport default Sidebar;\n","import {authHeader} from 'helpers';\nimport {urlConstants} from 'constants/urlConstants';\nimport handleResponse from 'services/handler';\n\nconst getAll = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + '/customers',\n    requestOptions,\n  );\n  const customers = await handleResponse(response);\n  return customers;\n};\n\nconst getById = async id => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/customers/${id}`,\n    requestOptions,\n  );\n  const customers = await handleResponse(response);\n  return customers;\n};\n\nconst add = async customer => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(customer),\n  };\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/customers`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nconst update = async customer => {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(customer),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/customers/${customer.id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nconst _delete = async id => {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/customers/${id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nexport const customerService = {\n  add,\n  getAll,\n  getById,\n  update,\n  delete: _delete,\n};\n","import {authHeader} from 'helpers';\nimport {urlConstants} from 'constants/urlConstants';\nimport handleResponse from 'services/handler';\n\nconst getAll = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + '/suppliers',\n    requestOptions,\n  );\n  const suppliers = await handleResponse(response);\n  return suppliers;\n};\n\nconst getById = async id => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/suppliers/${id}`,\n    requestOptions,\n  );\n  const suppliers = await handleResponse(response);\n  return suppliers;\n};\n\nconst add = async supplier => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(supplier),\n  };\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/suppliers`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nconst update = async supplier => {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(supplier),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/suppliers/${supplier.id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nconst _delete = async id => {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/suppliers/${id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nexport const supplierService = {\n  add,\n  getAll,\n  getById,\n  update,\n  delete: _delete,\n};\n","import {authHeader} from 'helpers';\nimport {urlConstants} from 'constants/urlConstants';\nimport handleResponse from 'services/handler';\n\nconst getAll = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + '/brands',\n    requestOptions,\n  );\n  const brands = await handleResponse(response);\n  return brands;\n};\n\nconst getById = async id => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/brands/${id}`,\n    requestOptions,\n  );\n  const brands = await handleResponse(response);\n  return brands;\n};\n\nconst add = async brand => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(brand),\n  };\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/brands`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nconst update = async brand => {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(brand),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/brands/${brand.id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nconst _delete = async id => {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/brands/${id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nexport const brandService = {\n  add,\n  getAll,\n  getById,\n  update,\n  delete: _delete,\n};\n","import {authHeader} from 'helpers';\nimport {urlConstants} from 'constants/urlConstants';\nimport handleResponse from 'services/handler';\n\nconst getAll = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + '/products',\n    requestOptions,\n  );\n  const products = await handleResponse(response);\n  return products;\n};\n\nconst getById = async id => {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/products/${id}`,\n    requestOptions,\n  );\n  const products = await handleResponse(response);\n  return products;\n};\n\nconst add = async product => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(product),\n  };\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/products`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nconst packageProduct = async product => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(product),\n  };\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/products/package`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nconst update = async product => {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(product),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/products/${product.id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nconst _delete = async id => {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader(),\n  };\n\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/products/${id}`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nexport const stockUpdate = async product => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {...authHeader(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(product),\n  };\n  const response = await fetch(\n    urlConstants.REQUEST_URL + `/products/stocks`,\n    requestOptions,\n  );\n  return handleResponse(response);\n};\n\nexport const productService = {\n  add,\n  packageProduct,\n  getAll,\n  getById,\n  update,\n  delete: _delete,\n};\n","import {userConstants} from 'constants/userConstants';\nimport {userService} from 'services';\nimport {alertActions} from 'actions';\nimport {history} from 'helpers';\n\nconst request = (type, data) => ({\n  type: type,\n  data,\n});\nconst success = (type, data) => ({\n  type: type,\n  data,\n});\nconst failure = (type, error) => ({type: type, error});\n\nconst login = (username, password) => {\n  return dispatch => {\n    dispatch(request(userConstants.LOGIN_REQUEST, {username}));\n\n    userService.login(username, password).then(\n      user => {\n        dispatch(success(userConstants.LOGIN_SUCCESS, user));\n        history.push('/admin/boxed-products');\n      },\n      error => {\n        dispatch(failure(userConstants.LOGIN_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst logout = () => {\n  userService.logout();\n  return {type: userConstants.LOGOUT};\n};\n\nconst register = user => {\n  return async dispatch => {\n    dispatch(request(userConstants.REGISTER_REQUEST, user));\n\n    await userService.register(user).then(\n      () => {\n        dispatch(success(userConstants.REGISTER_SUCCESS, user));\n        dispatch(alertActions.success('Kullanıcı Başarıyla Eklendi'));\n      },\n      error => {\n        dispatch(failure(userConstants.REGISTER_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst getAll = () => {\n  return dispatch => {\n    dispatch(request(userConstants.GETALL_REQUEST));\n\n    userService.getAll().then(\n      users => dispatch(success(userConstants.GETALL_SUCCESS, users)),\n      error => dispatch(failure(userConstants.GETALL_FAILURE, error)),\n    );\n  };\n};\n\nconst _delete = user => {\n  return async dispatch => {\n    dispatch(request(userConstants.DELETE_REQUEST, user));\n\n    await userService.delete(user.id).then(\n      () => {\n        dispatch(success(userConstants.DELETE_SUCCESS, user));\n        dispatch(alertActions.success('Kullanıcı başarıyla silindi'));\n      },\n      error => {\n        dispatch(failure(userConstants.DELETE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst update = user => {\n  return async dispatch => {\n    dispatch(request(userConstants.UPDATE_REQUEST, user));\n\n    await userService.update(user).then(\n      () => {\n        dispatch(success(userConstants.UPDATE_SUCCESS, user));\n        dispatch(alertActions.success('Kullanıcı başarıyla güncellendi'));\n      },\n      error => {\n        dispatch(failure(userConstants.UPDATE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll,\n  delete: _delete,\n  update,\n};\n","import {customerConstants} from 'constants/customerConstants';\nimport {customerService} from 'services';\nimport {alertActions} from 'actions';\n\nconst request = (type, data) => ({\n  type: type,\n  data,\n});\nconst success = (type, data) => ({\n  type: type,\n  data,\n});\nconst failure = (type, error) => ({type: type, error});\n\nconst add = customer => {\n  return async dispatch => {\n    dispatch(request(customerConstants.ADD_REQUEST, customer));\n\n    await customerService.add(customer).then(\n      () => {\n        dispatch(success(customerConstants.ADD_SUCCESS, customer));\n        dispatch(alertActions.success('Müşteri Başarıyla Eklendi'));\n      },\n      error => {\n        dispatch(failure(customerConstants.ADD_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst getAll = () => {\n  return async dispatch => {\n    dispatch(request(customerConstants.GETALL_REQUEST));\n    await customerService.getAll().then(\n      customers =>\n        dispatch(success(customerConstants.GETALL_SUCCESS, customers)),\n      error => dispatch(failure(customerConstants.GETALL_FAILURE, error)),\n    );\n  };\n};\n\nconst _delete = customer => {\n  return async dispatch => {\n    dispatch(request(customerConstants.DELETE_REQUEST, customer));\n\n    await customerService.delete(customer.id).then(\n      () => {\n        dispatch(success(customerConstants.DELETE_SUCCESS, customer));\n        dispatch(alertActions.success('Müşteri başarıyla silindi'));\n      },\n      error => {\n        dispatch(failure(customerConstants.DELETE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst update = customer => {\n  return async dispatch => {\n    dispatch(request(customerConstants.UPDATE_REQUEST, customer));\n\n    await customerService.update(customer).then(\n      () => {\n        dispatch(success(customerConstants.UPDATE_SUCCESS, customer));\n        dispatch(alertActions.success('Müşteri başarıyla güncellendi'));\n      },\n      error => {\n        dispatch(failure(customerConstants.UPDATE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nexport const customerActions = {\n  add,\n  getAll,\n  delete: _delete,\n  update,\n};\n","import {supplierConstants} from 'constants/supplierConstants';\nimport {supplierService} from 'services';\nimport {alertActions} from 'actions';\n\nconst request = (type, data) => ({\n  type: type,\n  data,\n});\nconst success = (type, data) => ({\n  type: type,\n  data,\n});\nconst failure = (type, error) => ({type: type, error});\n\nconst add = supplier => {\n  return async dispatch => {\n    dispatch(request(supplierConstants.ADD_REQUEST, supplier));\n\n    await supplierService.add(supplier).then(\n      () => {\n        dispatch(success(supplierConstants.ADD_SUCCESS, supplier));\n        dispatch(alertActions.success('Tedarikçi Başarıyla Eklendi'));\n      },\n      error => {\n        dispatch(failure(supplierConstants.ADD_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst getAll = () => {\n  return async dispatch => {\n    dispatch(request(supplierConstants.GETALL_REQUEST));\n    await supplierService.getAll().then(\n      suppliers =>\n        dispatch(success(supplierConstants.GETALL_SUCCESS, suppliers)),\n      error => dispatch(failure(supplierConstants.GETALL_FAILURE, error)),\n    );\n  };\n};\n\nconst _delete = supplier => {\n  return async dispatch => {\n    dispatch(request(supplierConstants.DELETE_REQUEST, supplier));\n\n    await supplierService.delete(supplier.id).then(\n      () => {\n        dispatch(success(supplierConstants.DELETE_SUCCESS, supplier));\n        dispatch(alertActions.success('Tedarikçi başarıyla silindi'));\n      },\n      error => {\n        dispatch(failure(supplierConstants.DELETE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst update = supplier => {\n  return async dispatch => {\n    dispatch(request(supplierConstants.UPDATE_REQUEST, supplier));\n\n    await supplierService.update(supplier).then(\n      () => {\n        dispatch(success(supplierConstants.UPDATE_SUCCESS, supplier));\n        dispatch(alertActions.success('Tedarikçi başarıyla güncellendi'));\n      },\n      error => {\n        dispatch(failure(supplierConstants.UPDATE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nexport const supplierActions = {\n  add,\n  getAll,\n  delete: _delete,\n  update,\n};\n","import {brandConstants} from 'constants/brandConstants';\nimport {brandService} from 'services';\nimport {alertActions} from 'actions';\n\nconst request = (type, data) => ({\n  type: type,\n  data,\n});\nconst success = (type, data) => ({\n  type: type,\n  data,\n});\nconst failure = (type, error) => ({type: type, error});\n\nconst add = brand => {\n  return async dispatch => {\n    dispatch(request(brandConstants.ADD_REQUEST, brand));\n\n    await brandService.add(brand).then(\n      () => {\n        dispatch(success(brandConstants.ADD_SUCCESS, brand));\n        dispatch(alertActions.success('Marka Başarıyla Eklendi'));\n      },\n      error => {\n        dispatch(failure(brandConstants.ADD_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst getAll = () => {\n  return async dispatch => {\n    dispatch(request(brandConstants.GETALL_REQUEST));\n    await brandService.getAll().then(\n      brands =>\n        dispatch(success(brandConstants.GETALL_SUCCESS, brands)),\n      error => dispatch(failure(brandConstants.GETALL_FAILURE, error)),\n    );\n  };\n};\n\nconst _delete = brand => {\n  return async dispatch => {\n    dispatch(request(brandConstants.DELETE_REQUEST, brand));\n\n    await brandService.delete(brand.id).then(\n      () => {\n        dispatch(success(brandConstants.DELETE_SUCCESS, brand));\n        dispatch(alertActions.success('Marka başarıyla silindi'));\n      },\n      error => {\n        dispatch(failure(brandConstants.DELETE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst update = brand => {\n  return async dispatch => {\n    dispatch(request(brandConstants.UPDATE_REQUEST, brand));\n\n    await brandService.update(brand).then(\n      () => {\n        dispatch(success(brandConstants.UPDATE_SUCCESS, brand));\n        dispatch(alertActions.success('Marka başarıyla güncellendi'));\n      },\n      error => {\n        dispatch(failure(brandConstants.UPDATE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nexport const brandActions = {\n  add,\n  getAll,\n  delete: _delete,\n  update,\n};\n","import {productConstants} from 'constants/productConstants';\nimport {productService} from 'services';\nimport {alertActions} from 'actions';\n\nconst request = (type, data) => ({\n  type: type,\n  data,\n});\nconst success = (type, data) => ({\n  type: type,\n  data,\n});\nconst failure = (type, error) => ({type: type, error});\n\nconst add = product => {\n  return async dispatch => {\n    dispatch(request(productConstants.ADD_REQUEST, product));\n    await productService.add(product).then(\n      () => {\n        dispatch(success(productConstants.ADD_SUCCESS, product));\n        dispatch(alertActions.success('Ürün Başarıyla Eklendi'));\n      },\n      error => {\n        dispatch(failure(productConstants.ADD_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst packageProduct = product => {\n  return async dispatch => {\n    dispatch(request(productConstants.ADD_REQUEST, product));\n    await productService.packageProduct(product).then(\n      () => {\n        dispatch(success(productConstants.ADD_SUCCESS, product));\n        dispatch(alertActions.success('Ürün Başarıyla Paketlendi'));\n      },\n      error => {\n        dispatch(failure(productConstants.ADD_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst getAll = () => {\n  return async dispatch => {\n    dispatch(request(productConstants.GETALL_REQUEST));\n    await productService.getAll().then(\n      products => dispatch(success(productConstants.GETALL_SUCCESS, products)),\n      error => dispatch(failure(productConstants.GETALL_FAILURE, error)),\n    );\n  };\n};\n\nconst _delete = product => {\n  return async dispatch => {\n    dispatch(request(productConstants.DELETE_REQUEST, product));\n\n    await productService.delete(product.id).then(\n      () => {\n        dispatch(success(productConstants.DELETE_SUCCESS, product));\n        dispatch(alertActions.success('Ürün başarıyla silindi'));\n      },\n      error => {\n        dispatch(failure(productConstants.DELETE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nconst update = product => {\n  return async dispatch => {\n    dispatch(request(productConstants.UPDATE_REQUEST, product));\n\n    await productService.update(product).then(\n      () => {\n        dispatch(success(productConstants.UPDATE_SUCCESS, product));\n        dispatch(alertActions.success('Ürün başarıyla güncellendi'));\n      },\n      error => {\n        dispatch(failure(productConstants.UPDATE_FAILURE, error));\n        dispatch(alertActions.error(error.message || error));\n      },\n    );\n  };\n};\n\nexport const productActions = {\n  add,\n  packageProduct,\n  getAll,\n  delete: _delete,\n  update,\n};\n","import React, {Fragment} from 'react';\nimport {useForm, Controller} from 'react-hook-form';\nimport _ from 'lodash/fp';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\n\nexport default function CustomForm(props) {\n  const {control, handleSubmit, errors, watch} = useForm();\n  var materialCount = 0;\n  var packageCount = 0;\n  let materials = [];\n  let packages = [];\n  let supplier = '';\n  if (props.spec === 'box') {\n    materials = props.materials;\n    packages = props.packages;\n    materialCount = watch('materialCount');\n    packageCount = watch('packageCount');\n    supplier = watch('supplier');\n  }\n\n  const getMaterials = n => {\n    var rows = [];\n    const options = props.products\n      .filter(o => o.type === 'material')\n      .map((value, key) => {\n        return {key: key, label: value.name, value: value.id};\n      });\n    if (n < materials.length) materials = materials.slice(-1, n);\n    for (let i = 0; i < materials.length; i++) {\n      rows.push(\n        <Fragment key={i}>\n          <FormGroup\n            className={`has-label ${\n              _.get(`${'material_' + (i + 1)}.type`, errors) ? 'has-danger' : ''\n            }`}\n            style={{\n              display: 'flex',\n              justifyContent: 'flex-start',\n              flexDirection: 'column',\n            }}\n          >\n            <label\n              style={{\n                marginBottom: '5px',\n                float: 'left',\n                textAlign: 'left',\n                fontSize: '1rem',\n                fontWeight: 'bold',\n                color: 'white',\n              }}\n            >\n              {'Hammadde ' + (i + 1)}\n            </label>\n            <Controller\n              as={Select}\n              options={options}\n              name={'material_' + (i + 1)}\n              placeholder={'Hammadde ' + (i + 1)}\n              control={control}\n              defaultValue={materials[i].item}\n              style={{color: 'white'}}\n            />\n          </FormGroup>\n          <FormGroup\n            className={`has-label ${\n              _.get(`${'material_' + (i + 1) + '_count'}.type`, errors)\n                ? 'has-danger'\n                : ''\n            }`}\n          >\n            <label\n              style={{\n                marginBottom: '5px',\n                float: 'left',\n                fontSize: '1rem',\n                fontWeight: 'bold',\n                color: 'white',\n              }}\n            >\n              {'Hammadde ' + (i + 1) + ' Miktarı'}\n            </label>\n            <Controller\n              as={Input}\n              name={'material_' + (i + 1) + '_count'}\n              type={'number'}\n              placeholder={'Hammadde ' + (i + 1) + ' Miktarı'}\n              control={control}\n              defaultValue={materials[i].stock}\n              style={{color: 'white'}}\n            />\n          </FormGroup>\n        </Fragment>,\n      );\n    }\n    for (let i = materials.length; i < n; i++) {\n      rows.push(\n        <Fragment key={i}>\n          <FormGroup\n            className={`has-label ${\n              _.get(`${'material_' + (i + 1)}.type`, errors) ? 'has-danger' : ''\n            }`}\n            style={{\n              display: 'flex',\n              justifyContent: 'flex-start',\n              flexDirection: 'column',\n            }}\n          >\n            <label\n              style={{\n                marginBottom: '5px',\n                float: 'left',\n                textAlign: 'left',\n                fontSize: '1rem',\n                fontWeight: 'bold',\n                color: 'white',\n              }}\n            >\n              {'Hammadde ' + (i + 1)}\n            </label>\n            <Controller\n              as={Select}\n              options={options}\n              name={'material_' + (i + 1)}\n              placeholder={'Hammadde ' + (i + 1)}\n              control={control}\n              defaultValue={''}\n              style={{color: 'white'}}\n            />\n          </FormGroup>\n          <FormGroup\n            className={`has-label ${\n              _.get(`${'material_' + (i + 1) + '_count'}.type`, errors)\n                ? 'has-danger'\n                : ''\n            }`}\n          >\n            <label\n              style={{\n                marginBottom: '5px',\n                float: 'left',\n                fontSize: '1rem',\n                fontWeight: 'bold',\n                color: 'white',\n              }}\n            >\n              {'Hammadde ' + (i + 1) + ' Miktarı'}\n            </label>\n            <Controller\n              as={Input}\n              name={'material_' + (i + 1) + '_count'}\n              type={'number'}\n              placeholder={'Hammadde ' + (i + 1) + ' Miktarı'}\n              control={control}\n              defaultValue={''}\n              style={{color: 'white'}}\n            />\n          </FormGroup>\n        </Fragment>,\n      );\n    }\n    return rows;\n  };\n\n  const getPackages = n => {\n    var rows = [];\n    const options = props.products\n      .filter(o => o.type === 'package')\n      .map((value, key) => {\n        return {key: key, label: value.name, value: value.id};\n      });\n    if (n < packages.length) packages = packages.slice(-1, n);\n    for (let i = 0; i < packages.length; i++) {\n      rows.push(\n        <Fragment key={i}>\n          <FormGroup\n            className={`has-label ${\n              _.get(`${'package_' + (i + 1)}.type`, errors) ? 'has-danger' : ''\n            }`}\n            style={{\n              display: 'flex',\n              justifyContent: 'flex-start',\n              flexDirection: 'column',\n            }}\n          >\n            <label\n              style={{\n                marginBottom: '5px',\n                float: 'left',\n                textAlign: 'left',\n                fontSize: '1rem',\n                fontWeight: 'bold',\n                color: 'white',\n              }}\n            >\n              {'Ambalaj ' + (i + 1)}\n            </label>\n            <Controller\n              as={Select}\n              options={options}\n              name={'package_' + (i + 1)}\n              placeholder={'Ambalaj ' + (i + 1)}\n              control={control}\n              defaultValue={packages[i].item}\n              style={{color: 'white'}}\n            />\n          </FormGroup>\n          <FormGroup\n            className={`has-label ${\n              _.get(`${'package_' + (i + 1) + '_count'}.type`, errors)\n                ? 'has-danger'\n                : ''\n            }`}\n          >\n            <label\n              style={{\n                marginBottom: '5px',\n                float: 'left',\n                fontSize: '1rem',\n                fontWeight: 'bold',\n                color: 'white',\n              }}\n            >\n              {'Ambalaj ' + (i + 1) + ' Miktarı'}\n            </label>\n            <Controller\n              as={Input}\n              name={'package_' + (i + 1) + '_count'}\n              type={'number'}\n              placeholder={'Ambalaj ' + (i + 1) + ' Miktarı'}\n              control={control}\n              defaultValue={packages[i].stock}\n              style={{color: 'white'}}\n            />\n          </FormGroup>\n        </Fragment>,\n      );\n    }\n    for (let i = packages.length; i < n; i++) {\n      rows.push(\n        <Fragment key={i}>\n          <FormGroup\n            className={`has-label ${\n              _.get(`${'package_' + (i + 1)}.type`, errors) ? 'has-danger' : ''\n            }`}\n            style={{\n              display: 'flex',\n              justifyContent: 'flex-start',\n              flexDirection: 'column',\n            }}\n          >\n            <label\n              style={{\n                marginBottom: '5px',\n                float: 'left',\n                textAlign: 'left',\n                fontSize: '1rem',\n                fontWeight: 'bold',\n                color: 'white',\n              }}\n            >\n              {'Ambalaj ' + (i + 1)}\n            </label>\n            <Controller\n              as={Select}\n              options={options}\n              name={'package_' + (i + 1)}\n              placeholder={'Ambalaj ' + (i + 1)}\n              control={control}\n              defaultValue={''}\n              style={{color: 'white'}}\n            />\n          </FormGroup>\n          <FormGroup\n            className={`has-label ${\n              _.get(`${'package_' + (i + 1) + '_count'}.type`, errors)\n                ? 'has-danger'\n                : ''\n            }`}\n          >\n            <label\n              style={{\n                marginBottom: '5px',\n                float: 'left',\n                fontSize: '1rem',\n                fontWeight: 'bold',\n                color: 'white',\n              }}\n            >\n              {'Ambalaj ' + (i + 1) + ' Miktarı'}\n            </label>\n            <Controller\n              as={Input}\n              name={'package_' + (i + 1) + '_count'}\n              type={'number'}\n              placeholder={'Ambalaj ' + (i + 1) + ' Miktarı'}\n              control={control}\n              defaultValue={''}\n              style={{color: 'white'}}\n            />\n          </FormGroup>\n        </Fragment>,\n      );\n    }\n    return rows;\n  };\n\n  const validate = form => {\n    return (\n      <>\n        {_.get(`${form.name}.type`, errors) === 'required' && (\n          <label className=\"error\">Bu alan zorunludur!</label>\n        )}\n        {_.get(`${form.name}.type`, errors) === 'minLength' && (\n          <label className=\"error\">\n            En az {form.rules.minLength} karakter giriniz!\n          </label>\n        )}\n        {_.get(`${form.name}.type`, errors) === 'maxLength' && (\n          <label className=\"error\">\n            En fazla {form.rules.maxLength} giriniz!\n          </label>\n        )}\n        {_.get(`${form.name}.type`, errors) === 'pattern' && (\n          <label className=\"error\">Sadece alfabetik karakterler!</label>\n        )}\n        {_.get(`${form.name}.type`, errors) === 'validate' && (\n          <label className=\"error\">Şifreler aynı olmalıdır!</label>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <Form id=\"Validation\">\n      <Card>\n        <CardHeader>\n          <CardTitle tag=\"h1\" style={{fontWeight: 'bold'}}>\n            {props.name}\n          </CardTitle>\n        </CardHeader>\n        <CardBody>\n          {props.forms.map((form, index) => {\n            if (form.name === 'password-repeat') {\n              form.rules['validate'] = value => value === watch('password');\n            }\n            if (form.type === 'select') {\n              let options = [];\n              if (props.spec === 'box' && form.name === 'brand') {\n                options = form.data\n                  .filter(o => o.supplier === supplier?.value)\n                  .map((value, key) => {\n                    return {key: key, label: value.name, value: value.id};\n                  });\n              } else if (props.spec === 'box' && form.name === 'customer') {\n                options = form.data.map((value, key) => {\n                  return {key: key, label: value.companyName, value: value.id};\n                });\n              } else {\n                options = form.data.map((value, key) => {\n                  return {key: key, label: value.name, value: value.id};\n                });\n              }\n              return (\n                <FormGroup\n                  key={index}\n                  className={`has-label ${\n                    _.get(`${form.name}.type`, errors) ? 'has-danger' : ''\n                  }`}\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'flex-start',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <label\n                    style={{\n                      marginBottom: '5px',\n                      float: 'left',\n                      textAlign: 'left',\n                      fontSize: '1rem',\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    {form.label}\n                  </label>\n                  <Controller\n                    as={Select}\n                    options={options}\n                    name={form.name}\n                    placeholder={form.placeholder}\n                    rules={form.rules}\n                    control={control}\n                    defaultValue={\n                      props.type === 'add'\n                        ? ''\n                        : {\n                            value: form.defaultValue.id,\n                            label: form.defaultValue.name,\n                          }\n                    }\n                    style={{color: 'white'}}\n                  />\n                  {validate(form)}\n                </FormGroup>\n              );\n            }\n            return (\n              <Fragment key={index}>\n                <FormGroup\n                  className={`has-label ${\n                    _.get(`${form.name}.type`, errors) ? 'has-danger' : ''\n                  }`}\n                >\n                  <label\n                    style={{\n                      marginBottom: '5px',\n                      float: 'left',\n                      fontSize: '1rem',\n                      fontWeight: 'bold',\n                      color: 'white',\n                    }}\n                  >\n                    {form.label}\n                  </label>\n                  <Controller\n                    as={Input}\n                    name={form.name}\n                    type={form.type}\n                    rules={form.rules}\n                    placeholder={form.placeholder}\n                    control={control}\n                    defaultValue={form.defaultValue}\n                    style={{color: 'white'}}\n                  />\n                  {validate(form)}\n                </FormGroup>\n                {form.name === 'materialCount' && getMaterials(materialCount)}\n                {form.name === 'packageCount' && getPackages(packageCount)}\n              </Fragment>\n            );\n          })}\n\n          <div\n            className=\"category form-category\"\n            style={{float: 'left', fontSize: '0.75rem', fontWeight: 'bold'}}\n          >\n            * Zorunlu alanlar\n          </div>\n        </CardBody>\n        <CardFooter className=\"text-right\">\n          <Button\n            color=\"danger\"\n            style={{float: 'left', fontSize: '1rem', fontWeight: 'bold'}}\n            onClick={props.onCancel}\n          >\n            İptal\n          </Button>\n          <Button\n            color=\"success\"\n            onClick={handleSubmit(props.onSubmit, props.onError)}\n            style={{fontSize: '1rem', fontWeight: 'bold'}}\n          >\n            {props.submitText}\n          </Button>\n        </CardFooter>\n      </Card>\n    </Form>\n  );\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactTable from 'react-table';\nimport ReactBSAlert from 'react-bootstrap-sweetalert';\nimport NotificationAlert from 'react-notification-alert';\nimport BlockUi from 'react-block-ui';\nimport {Loader} from 'react-loaders';\nimport 'react-block-ui/style.css';\nimport 'loaders.css/loaders.min.css';\nimport classNames from 'classnames';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\nimport CustomForm from 'components/CustomForm';\nimport {userActions} from 'actions';\n\nclass UsersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.state = {\n      dataLoaded: false,\n      alert: null,\n      loaderType: 'ball-triangle-path',\n      message: 'Loading, please wait',\n    };\n    this.notificationAlertRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    await this.props.getAll();\n  };\n\n  componentDidUpdate() {\n    if (this.props.users.items && !this.state.dataLoaded) {\n      this.data = this.props.users.items.users.map((value, key) => {\n        return {\n          id: value.id,\n          name: value.name,\n          surname: value.surname,\n          userName: value.userName,\n          actions: (\n            <div className=\"actions-right\">\n              {/* use this button to add a edit kind of action */}\n              <Button\n                onClick={() => {\n                  let obj = this.data.find(o => o.id === value.id);\n                  this.updateUserAlert(obj);\n                }}\n                color=\"warning\"\n                size=\"sm\"\n                className={classNames('btn-icon btn-link like', {\n                  'btn-neutral': key < 5,\n                })}\n              >\n                <i className=\"tim-icons icon-pencil\" />\n              </Button>{' '}\n              {/* use this button to remove the data row */}\n              <Button\n                onClick={() => {\n                  let obj = this.data.find(o => o.id === value.id);\n                  this.deleteUserAlert(obj);\n                }}\n                color=\"danger\"\n                size=\"sm\"\n                className={classNames('btn-icon btn-link like', {\n                  'btn-neutral': key < 5,\n                })}\n              >\n                <i className=\"tim-icons icon-simple-remove\" />\n              </Button>{' '}\n            </div>\n          ),\n        };\n      });\n      this.setState({dataLoaded: true});\n    }\n  }\n\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n\n  addUser = async data => {\n    this.hideAlert();\n    await this.props.addUser(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  updateUser = async (data, user) => {\n    this.hideAlert();\n    await this.props.updateUser({...data, id: user.id});\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  deleteUser = async data => {\n    this.hideAlert();\n    await this.props.deleteUser(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  onError = (errors, e) => console.log('error', errors, e);\n\n  deleteUserAlert = user => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          danger\n          onCancel={this.hideAlert}\n          showCancel={true}\n          onConfirm={() => this.deleteUser(user)}\n          title={user.name + ' isimli kullanıcıyı silmek istiyor musunuz?'}\n          confirmBtnText=\"Sil!\"\n          cancelBtnText=\"İptal\"\n          confirmBtnBsStyle=\"success\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      ),\n    });\n  };\n\n  updateUserAlert = user => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Kullanıcı Güncelleme'}\n            submitText=\"Güncelle\"\n            forms={[\n              {\n                label: 'İsim*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: user.name,\n              },\n              {\n                label: 'Soyisim*',\n                name: 'surname',\n                type: 'input',\n                placeholder: 'Soyisim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: user.surname,\n              },\n              {\n                label: 'Kullanıcı Adı*',\n                name: 'userName',\n                type: 'input',\n                placeholder: 'Kullanıcı Adı',\n                rules: {\n                  required: true,\n                },\n                defaultValue: user.userName,\n              },\n              {\n                label: 'Şifre*',\n                name: 'password',\n                type: 'password',\n                placeholder: 'Şifre',\n                rules: {\n                  required: true,\n                  minLength: 5,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Şifre Tekrar*',\n                name: 'password-repeat',\n                type: 'password',\n                placeholder: 'Şifre Tekrar',\n                rules: {\n                  required: true,\n                  minLength: 5,\n                },\n                defaultValue: '',\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={data => this.updateUser(data, user)}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  addUserAlert = () => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Kayıt Formu'}\n            submitText=\"Ekle\"\n            forms={[\n              {\n                label: 'İsim*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Soyisim*',\n                name: 'surname',\n                type: 'input',\n                placeholder: 'Soyisim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Kullanıcı Adı*',\n                name: 'userName',\n                type: 'input',\n                placeholder: 'Kullanıcı Adı',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Şifre*',\n                name: 'password',\n                type: 'password',\n                placeholder: 'Şifre',\n                rules: {\n                  required: true,\n                  minLength: 5,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Şifre Tekrar*',\n                name: 'password-repeat',\n                type: 'password',\n                placeholder: 'Şifre Tekrar',\n                rules: {\n                  required: true,\n                  minLength: 5,\n                },\n                defaultValue: '',\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={this.addUser}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  notify = (e, notType) => {\n    var type = notType;\n    var options = {};\n    options = {\n      place: 'tr',\n      message: (\n        <div>\n          <div>{e}</div>\n        </div>\n      ),\n      type: type,\n      icon: 'tim-icons icon-alert-circle-exc',\n      autoDismiss: 5,\n    };\n    this.notificationAlertRef.current.notificationAlert(options);\n  };\n\n  toggleBlocking = () => {\n    this.setState({blocking: !this.state.blocking});\n  };\n\n  render() {\n    return (\n      <BlockUi\n        className=\"block-ui\"\n        keepInView\n        blocking={!this.state.dataLoaded}\n        message={this.state.message}\n        loader={<Loader active type={this.state.loaderType} color=\"#02a17c\" />}\n      >\n        <div className=\"rna-container\">\n          <NotificationAlert ref={this.notificationAlertRef} />\n        </div>\n        {this.state.alert}\n        <Row>\n          <Col xs={12} md={12}>\n            <Card style={{minHeight: '98vh', marginBottom: 0}}>\n              <CardHeader>\n                <CardTitle\n                  tag=\"h1\"\n                  style={{textAlign: 'center', fontWeight: 'bolder'}}\n                >\n                  Kullanıcılar\n                </CardTitle>\n                <Button\n                  className=\"float-right\"\n                  color=\"success\"\n                  onClick={this.addUserAlert}\n                  style={{fontSize: '1rem', fontWeight: 'bold'}}\n                >\n                  Yeni Kullanıcı Ekle\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <ReactTable\n                  sorted={this.sortOptions}\n                  data={this.data}\n                  resizable={false}\n                  columns={[\n                    {\n                      Header: 'Ad',\n                      accessor: 'name',\n                    },\n                    {\n                      Header: 'Soyad',\n                      accessor: 'surname',\n                    },\n                    {\n                      Header: 'KULLANICI ADI',\n                      accessor: 'userName',\n                    },\n                    {\n                      Header: 'İşlemler',\n                      accessor: 'actions',\n                      sortable: false,\n                      filterable: false,\n                    },\n                  ]}\n                  showPaginationTop\n                  showPaginationBottom={false}\n                  filterable={true}\n                  minRows={0}\n                  defaultPageSize={7}\n                  className=\"-striped -highlight\"\n                  loading={false}\n                  nextText=\"İleri\"\n                  previousText=\"Geri\"\n                  pageText=\"Sayfa\"\n                  rowsText=\"Satır\"\n                  noDataText=\"Data bulunamadı!\"\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </BlockUi>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {alert, users} = state;\n\n  return {alert, users};\n}\n\nconst actionCreators = {\n  getAll: userActions.getAll,\n  addUser: userActions.register,\n  updateUser: userActions.update,\n  deleteUser: userActions.delete,\n};\n\nconst connectedUsersPage = connect(mapState, actionCreators)(UsersPage);\nexport {connectedUsersPage as UsersPage};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactTable from 'react-table';\nimport ReactBSAlert from 'react-bootstrap-sweetalert';\nimport NotificationAlert from 'react-notification-alert';\nimport BlockUi from 'react-block-ui';\nimport {Loader} from 'react-loaders';\nimport 'react-block-ui/style.css';\nimport 'loaders.css/loaders.min.css';\nimport classNames from 'classnames';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\nimport CustomForm from 'components/CustomForm';\nimport {customerActions} from 'actions';\n\nclass CustomersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.state = {\n      dataLoaded: false,\n      alert: null,\n      loaderType: 'ball-triangle-path',\n      message: 'Loading, please wait',\n    };\n    this.notificationAlertRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    await this.props.getAll();\n  };\n\n  componentDidUpdate() {\n    if (this.props.customers.items && !this.state.dataLoaded) {\n      this.data = this.props.customers.items.customers.map((value, key) => {\n        return {\n          ...value,\n          actions: (\n            <div className=\"actions-right\">\n              {/* use this button to add a edit kind of action */}\n              <Button\n                onClick={() => {\n                  let obj = this.data.find(o => o.id === value.id);\n                  this.updateCustomerAlert(obj);\n                }}\n                color=\"warning\"\n                size=\"sm\"\n                className={classNames('btn-icon btn-link like', {\n                  'btn-neutral': key < 5,\n                })}\n              >\n                <i className=\"tim-icons icon-pencil\" />\n              </Button>{' '}\n              {/* use this button to remove the data row */}\n              <Button\n                onClick={() => {\n                  let obj = this.data.find(o => o.id === value.id);\n                  this.deleteCustomerAlert(obj);\n                }}\n                color=\"danger\"\n                size=\"sm\"\n                className={classNames('btn-icon btn-link like', {\n                  'btn-neutral': key < 5,\n                })}\n              >\n                <i className=\"tim-icons icon-simple-remove\" />\n              </Button>{' '}\n            </div>\n          ),\n        };\n      });\n      this.setState({dataLoaded: true});\n    }\n  }\n\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n\n  addCustomer = async data => {\n    this.hideAlert();\n    await this.props.addCustomer(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  updateCustomer = async (data, customer) => {\n    this.hideAlert();\n    await this.props.updateCustomer({...data, id: customer.id});\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  deleteCustomer = async data => {\n    this.hideAlert();\n    await this.props.deleteCustomer(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  onError = (errors, e) => console.log('error', errors, e);\n\n  deleteCustomerAlert = customer => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          danger\n          onCancel={this.hideAlert}\n          showCancel={true}\n          onConfirm={() => this.deleteCustomer(customer)}\n          title={customer.name + ' isimli müşteriyi silmek istiyor musunuz?'}\n          confirmBtnText=\"Sil!\"\n          cancelBtnText=\"İptal\"\n          confirmBtnBsStyle=\"success\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      ),\n    });\n  };\n\n  updateCustomerAlert = customer => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Müşteri Güncelleme'}\n            submitText=\"Güncelle\"\n            forms={[\n              {\n                label: 'Firma Adı*',\n                name: 'companyName',\n                type: 'input',\n                placeholder: 'Firma Adı',\n                rules: {\n                  required: true,\n                },\n                defaultValue: customer.companyName,\n              },\n              {\n                label: 'İsim*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: customer.name,\n              },\n              {\n                label: 'Soyisim*',\n                name: 'surname',\n                type: 'input',\n                placeholder: 'Soyisim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: customer.surname,\n              },\n              {\n                label: 'İl*',\n                name: 'province',\n                type: 'input',\n                placeholder: 'İl',\n                rules: {\n                  required: true,\n                },\n                defaultValue: customer.province,\n              },\n              {\n                label: 'İlçe*',\n                name: 'district',\n                type: 'input',\n                placeholder: 'İlçe',\n                rules: {\n                  required: true,\n                },\n                defaultValue: customer.district,\n              },\n              {\n                label: 'Telefon*',\n                name: 'phone',\n                type: 'phone',\n                placeholder: 'Telefon',\n                rules: {\n                  required: true,\n                },\n                defaultValue: customer.phone,\n              },\n              {\n                label: 'Açık Adres',\n                name: 'adress',\n                type: 'input',\n                placeholder: 'Adres',\n                rules: {\n                  required: false,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Notlar',\n                name: 'notes',\n                type: 'input',\n                placeholder: 'Notlar',\n                rules: {\n                  required: false,\n                },\n                defaultValue: customer.notes,\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={data => this.updateCustomer(data, customer)}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  addCustomerAlert = () => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Kayıt Formu'}\n            submitText=\"Ekle\"\n            forms={[\n              {\n                label: 'Firma Adı*',\n                name: 'companyName',\n                type: 'input',\n                placeholder: 'Firma Adı',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'İsim*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Soyisim*',\n                name: 'surname',\n                type: 'input',\n                placeholder: 'Soyisim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'İl*',\n                name: 'province',\n                type: 'input',\n                placeholder: 'İl',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'İlçe*',\n                name: 'district',\n                type: 'input',\n                placeholder: 'İlçe',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Telefon*',\n                name: 'phone',\n                type: 'phone',\n                placeholder: 'Telefon',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Açık Adres',\n                name: 'adress',\n                type: 'input',\n                placeholder: 'Adres',\n                rules: {\n                  required: false,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Notlar',\n                name: 'notes',\n                type: 'input',\n                placeholder: 'Notlar',\n                rules: {\n                  required: false,\n                },\n                defaultValue: '',\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={this.addCustomer}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  notify = (e, notType) => {\n    var type = notType;\n    var options = {};\n    options = {\n      place: 'tr',\n      message: (\n        <div>\n          <div>{e}</div>\n        </div>\n      ),\n      type: type,\n      icon: 'tim-icons icon-alert-circle-exc',\n      autoDismiss: 5,\n    };\n    this.notificationAlertRef.current.notificationAlert(options);\n  };\n\n  toggleBlocking = () => {\n    this.setState({blocking: !this.state.blocking});\n  };\n\n  render() {\n    return (\n      <BlockUi\n        className=\"block-ui\"\n        keepInView\n        blocking={!this.state.dataLoaded}\n        message={this.state.message}\n        loader={<Loader active type={this.state.loaderType} color=\"#02a17c\" />}\n      >\n        <div className=\"rna-container\">\n          <NotificationAlert ref={this.notificationAlertRef} />\n        </div>\n        {this.state.alert}\n        <Row>\n          <Col xs={12} md={12}>\n            <Card style={{minHeight: '98vh', marginBottom: 0}}>\n              <CardHeader>\n                <CardTitle\n                  tag=\"h1\"\n                  style={{textAlign: 'center', fontWeight: 'bolder'}}\n                >\n                  Müşteriler\n                </CardTitle>\n                <Button\n                  className=\"float-right\"\n                  color=\"success\"\n                  onClick={this.addCustomerAlert}\n                  style={{fontSize: '1rem', fontWeight: 'bold'}}\n                >\n                  Yeni Müşteri Ekle\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <ReactTable\n                  sorted={this.sortOptions}\n                  data={this.data}\n                  resizable={false}\n                  columns={[\n                    {\n                      Header: 'FİRMA ADI',\n                      accessor: 'companyName',\n                    },\n                    {\n                      Header: 'Ad',\n                      accessor: 'name',\n                    },\n                    {\n                      Header: 'Soyad',\n                      accessor: 'surname',\n                    },\n                    {\n                      Header: 'İL',\n                      accessor: 'province',\n                    },\n                    {\n                      Header: 'İLÇE',\n                      accessor: 'district',\n                    },\n                    {\n                      Header: 'Telefon',\n                      accessor: 'phone',\n                    },\n                    {\n                      Header: 'Notlar',\n                      accessor: 'notes',\n                      sortable: false,\n                      filterable: false,\n                    },\n                    {\n                      Header: 'İşlemler',\n                      accessor: 'actions',\n                      sortable: false,\n                      filterable: false,\n                    },\n                  ]}\n                  showPaginationTop\n                  showPaginationBottom={false}\n                  filterable={true}\n                  minRows={0}\n                  defaultPageSize={7}\n                  className=\"-striped -highlight\"\n                  loading={false}\n                  nextText=\"İleri\"\n                  previousText=\"Geri\"\n                  pageText=\"Sayfa\"\n                  rowsText=\"Satır\"\n                  noDataText=\"Data bulunamadı!\"\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </BlockUi>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {alert, customers} = state;\n\n  return {alert, customers};\n}\n\nconst actionCreators = {\n  getAll: customerActions.getAll,\n  addCustomer: customerActions.add,\n  updateCustomer: customerActions.update,\n  deleteCustomer: customerActions.delete,\n};\n\nconst connectedCustomersPage = connect(mapState, actionCreators)(CustomersPage);\nexport {connectedCustomersPage as CustomersPage};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactTable from 'react-table';\nimport ReactBSAlert from 'react-bootstrap-sweetalert';\nimport NotificationAlert from 'react-notification-alert';\nimport BlockUi from 'react-block-ui';\nimport {Loader} from 'react-loaders';\nimport 'react-block-ui/style.css';\nimport 'loaders.css/loaders.min.css';\nimport classNames from 'classnames';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\nimport CustomForm from 'components/CustomForm';\nimport {supplierActions} from 'actions';\n\nclass SuppliersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.state = {\n      dataLoaded: false,\n      alert: null,\n      loaderType: 'ball-triangle-path',\n      message: 'Loading, please wait',\n    };\n    this.notificationAlertRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    await this.props.getAll();\n  };\n\n  componentDidUpdate() {\n    if (this.props.suppliers.items && !this.state.dataLoaded) {\n      this.data = this.props.suppliers.items.suppliers.map((value, key) => {\n        return {\n          id: value.id,\n          name: value.name,\n          country: value.country,\n          actions: (\n            <div className=\"actions-right\">\n              {/* use this button to add a edit kind of action */}\n              <Button\n                onClick={() => {\n                  let obj = this.data.find(o => o.id === value.id);\n                  this.updateSupplierAlert(obj);\n                }}\n                color=\"warning\"\n                size=\"sm\"\n                className={classNames('btn-icon btn-link like', {\n                  'btn-neutral': key < 5,\n                })}\n              >\n                <i className=\"tim-icons icon-pencil\" />\n              </Button>{' '}\n              {/* use this button to remove the data row */}\n              <Button\n                onClick={() => {\n                  let obj = this.data.find(o => o.id === value.id);\n                  this.deleteSupplierAlert(obj);\n                }}\n                color=\"danger\"\n                size=\"sm\"\n                className={classNames('btn-icon btn-link like', {\n                  'btn-neutral': key < 5,\n                })}\n              >\n                <i className=\"tim-icons icon-simple-remove\" />\n              </Button>{' '}\n            </div>\n          ),\n        };\n      });\n      this.setState({dataLoaded: true});\n    }\n  }\n\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n\n  addSupplier = async data => {\n    this.hideAlert();\n    console.log(data);\n    await this.props.addSupplier(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  updateSupplier = async (data, supplier) => {\n    this.hideAlert();\n    await this.props.updateSupplier({...data, id: supplier.id});\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  deleteSupplier = async data => {\n    this.hideAlert();\n    await this.props.deleteSupplier(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  onError = (errors, e) => console.log('error', errors, e);\n\n  deleteSupplierAlert = supplier => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          danger\n          onCancel={this.hideAlert}\n          showCancel={true}\n          onConfirm={() => this.deleteSupplier(supplier)}\n          title={supplier.name + ' isimli tedarikçiyi silmek istiyor musunuz?'}\n          confirmBtnText=\"Sil!\"\n          cancelBtnText=\"İptal\"\n          confirmBtnBsStyle=\"success\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      ),\n    });\n  };\n\n  updateSupplierAlert = supplier => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Tedarikçi Güncelleme'}\n            submitText=\"Güncelle\"\n            forms={[\n              {\n                label: 'Şirket adı*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: supplier.name,\n              },\n              {\n                label: 'Ülke*',\n                name: 'country',\n                type: 'input',\n                placeholder: 'Ülke',\n                rules: {\n                  required: true,\n                },\n                defaultValue: supplier.country,\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={data => this.updateSupplier(data, supplier)}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  addSupplierAlert = () => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Kayıt Formu'}\n            submitText=\"Ekle\"\n            forms={[\n              {\n                label: 'Şirket Adı*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Ülke*',\n                name: 'country',\n                type: 'input',\n                placeholder: 'Ülke',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={this.addSupplier}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  notify = (e, notType) => {\n    var type = notType;\n    var options = {};\n    options = {\n      place: 'tr',\n      message: (\n        <div>\n          <div>{e}</div>\n        </div>\n      ),\n      type: type,\n      icon: 'tim-icons icon-alert-circle-exc',\n      autoDismiss: 5,\n    };\n    this.notificationAlertRef.current.notificationAlert(options);\n  };\n\n  toggleBlocking = () => {\n    this.setState({blocking: !this.state.blocking});\n  };\n\n  render() {\n    return (\n      <BlockUi\n        className=\"block-ui\"\n        keepInView\n        blocking={!this.state.dataLoaded}\n        message={this.state.message}\n        loader={<Loader active type={this.state.loaderType} color=\"#02a17c\" />}\n      >\n        <div className=\"rna-container\">\n          <NotificationAlert ref={this.notificationAlertRef} />\n        </div>\n        {this.state.alert}\n        <Row>\n          <Col xs={12} md={12}>\n            <Card style={{minHeight: '98vh', marginBottom: 0}}>\n              <CardHeader>\n                <CardTitle\n                  tag=\"h1\"\n                  style={{textAlign: 'center', fontWeight: 'bolder'}}\n                >\n                  Tedarikçiler\n                </CardTitle>\n                <Button\n                  className=\"float-right\"\n                  color=\"success\"\n                  onClick={this.addSupplierAlert}\n                  style={{fontSize: '1rem', fontWeight: 'bold'}}\n                >\n                  Yeni Tedarikçi Ekle\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <ReactTable\n                  sorted={this.sortOptions}\n                  data={this.data}\n                  resizable={false}\n                  columns={[\n                    {\n                      Header: 'ŞİRKET Adı',\n                      accessor: 'name',\n                    },\n\n                    {\n                      Header: 'Ülke',\n                      accessor: 'country',\n                    },\n                    {\n                      Header: 'İşlemler',\n                      accessor: 'actions',\n                      sortable: false,\n                      filterable: false,\n                    },\n                  ]}\n                  showPaginationTop\n                  showPaginationBottom={false}\n                  filterable={true}\n                  minRows={0}\n                  defaultPageSize={7}\n                  className=\"-striped -highlight\"\n                  loading={false}\n                  nextText=\"İleri\"\n                  previousText=\"Geri\"\n                  pageText=\"Sayfa\"\n                  rowsText=\"Satır\"\n                  noDataText=\"Data bulunamadı!\"\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </BlockUi>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {alert, suppliers} = state;\n\n  return {alert, suppliers};\n}\n\nconst actionCreators = {\n  getAll: supplierActions.getAll,\n  addSupplier: supplierActions.add,\n  updateSupplier: supplierActions.update,\n  deleteSupplier: supplierActions.delete,\n};\n\nconst connectedSuppliersPage = connect(mapState, actionCreators)(SuppliersPage);\nexport {connectedSuppliersPage as SuppliersPage};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactTable from 'react-table';\nimport ReactBSAlert from 'react-bootstrap-sweetalert';\nimport NotificationAlert from 'react-notification-alert';\nimport BlockUi from 'react-block-ui';\nimport {Loader} from 'react-loaders';\nimport 'react-block-ui/style.css';\nimport 'loaders.css/loaders.min.css';\nimport classNames from 'classnames';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\nimport CustomForm from 'components/CustomForm';\nimport {brandActions, supplierActions} from 'actions';\n\nclass BrandsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.suppliers = [];\n    this.state = {\n      dataLoaded: false,\n      alert: null,\n      loaderType: 'ball-triangle-path',\n      message: 'Loading, please wait',\n    };\n    this.notificationAlertRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    await this.props.getSuppliers();\n    await this.props.getAll();\n  };\n\n  componentDidUpdate() {\n    if (\n      this.props.suppliers.items &&\n      this.props.brands.items &&\n      !this.state.dataLoaded\n    ) {\n      this.suppliers = this.props.suppliers.items.suppliers;\n      this.data = this.props.brands.items.brands.map((value, key) => {\n        return {\n          id: value.id,\n          name: value.name,\n          supplier: this.suppliers.find(o => o.id === value.supplier),\n          actions: (\n            <div className=\"actions-right\">\n              {/* use this button to add a edit kind of action */}\n              <Button\n                onClick={() => {\n                  let obj = this.data.find(o => o.id === value.id);\n                  this.updateBrandAlert(obj);\n                }}\n                color=\"warning\"\n                size=\"sm\"\n                className={classNames('btn-icon btn-link like', {\n                  'btn-neutral': key < 5,\n                })}\n              >\n                <i className=\"tim-icons icon-pencil\" />\n              </Button>{' '}\n              {/* use this button to remove the data row */}\n              <Button\n                onClick={() => {\n                  let obj = this.data.find(o => o.id === value.id);\n                  this.deleteBrandAlert(obj);\n                }}\n                color=\"danger\"\n                size=\"sm\"\n                className={classNames('btn-icon btn-link like', {\n                  'btn-neutral': key < 5,\n                })}\n              >\n                <i className=\"tim-icons icon-simple-remove\" />\n              </Button>{' '}\n            </div>\n          ),\n        };\n      });\n      this.setState({dataLoaded: true});\n    }\n  }\n\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n\n  addBrand = async data => {\n    this.hideAlert();\n    await this.props.addBrand({\n      ...data,\n      supplier: data.supplier.value,\n    });\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  updateBrand = async (data, brand) => {\n    this.hideAlert();\n    await this.props.updateBrand({\n      ...data,\n      supplier: data.supplier.value,\n      id: brand.id,\n    });\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  deleteBrand = async data => {\n    this.hideAlert();\n    await this.props.deleteBrand(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  onError = (errors, e) => console.log('error', errors, e);\n\n  deleteBrandAlert = brand => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          danger\n          onCancel={this.hideAlert}\n          showCancel={true}\n          onConfirm={() => this.deleteBrand(brand)}\n          title={brand.name + ' isimli markayı silmek istiyor musunuz?'}\n          confirmBtnText=\"Sil!\"\n          cancelBtnText=\"İptal\"\n          confirmBtnBsStyle=\"success\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      ),\n    });\n  };\n\n  updateBrandAlert = brand => {\n    const defaultValue = brand.supplier;\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Marka Güncelleme'}\n            submitText=\"Güncelle\"\n            type=\"update\"\n            forms={[\n              {\n                label: 'Marka adı*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: brand.name,\n              },\n              {\n                label: 'Tedarikçi*',\n                name: 'supplier',\n                type: 'select',\n                placeholder: 'Tedarikçi',\n                rules: {\n                  required: false,\n                },\n                defaultValue: {\n                  value: defaultValue.id,\n                  label: defaultValue.name,\n                },\n                data: this.suppliers,\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={data => this.updateBrand(data, brand)}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  addBrandAlert = () => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Kayıt Formu'}\n            submitText=\"Ekle\"\n            type=\"add\"\n            forms={[\n              {\n                label: 'Marka Adı*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Tedarikçi*',\n                name: 'supplier',\n                type: 'select',\n                placeholder: 'Tedarikçi',\n                rules: {\n                  required: false,\n                },\n                defaultValue: '',\n                data: this.suppliers,\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={this.addBrand}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  notify = (e, notType) => {\n    var type = notType;\n    var options = {};\n    options = {\n      place: 'tr',\n      message: (\n        <div>\n          <div>{e}</div>\n        </div>\n      ),\n      type: type,\n      icon: 'tim-icons icon-alert-circle-exc',\n      autoDismiss: 5,\n    };\n    this.notificationAlertRef.current.notificationAlert(options);\n  };\n\n  toggleBlocking = () => {\n    this.setState({blocking: !this.state.blocking});\n  };\n\n  render() {\n    return (\n      <BlockUi\n        className=\"block-ui\"\n        keepInView\n        blocking={!this.state.dataLoaded}\n        message={this.state.message}\n        loader={<Loader active type={this.state.loaderType} color=\"#02a17c\" />}\n      >\n        <div className=\"rna-container\">\n          <NotificationAlert ref={this.notificationAlertRef} />\n        </div>\n        {this.state.alert}\n        <Row>\n          <Col xs={12} md={12}>\n            <Card style={{minHeight: '98vh', marginBottom: 0}}>\n              <CardHeader>\n                <CardTitle\n                  tag=\"h1\"\n                  style={{textAlign: 'center', fontWeight: 'bolder'}}\n                >\n                  Markalar\n                </CardTitle>\n                <Button\n                  className=\"float-right\"\n                  color=\"success\"\n                  onClick={this.addBrandAlert}\n                  style={{fontSize: '1rem', fontWeight: 'bold'}}\n                >\n                  Yeni Marka Ekle\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <ReactTable\n                  sorted={this.sortOptions}\n                  data={this.data}\n                  resizable={false}\n                  columns={[\n                    {\n                      Header: 'MARKA Adı',\n                      accessor: 'name',\n                    },\n                    {\n                      Header: 'TEDARİKÇİ',\n                      accessor: 'supplier.name',\n                    },\n                    {\n                      Header: 'İşlemler',\n                      accessor: 'actions',\n                      sortable: false,\n                      filterable: false,\n                    },\n                  ]}\n                  showPaginationTop\n                  showPaginationBottom={false}\n                  filterable={true}\n                  minRows={0}\n                  defaultPageSize={7}\n                  className=\"-striped -highlight\"\n                  loading={false}\n                  nextText=\"İleri\"\n                  previousText=\"Geri\"\n                  pageText=\"Sayfa\"\n                  rowsText=\"Satır\"\n                  noDataText=\"Data bulunamadı!\"\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </BlockUi>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {alert, brands, suppliers} = state;\n\n  return {alert, brands, suppliers};\n}\n\nconst actionCreators = {\n  getSuppliers: supplierActions.getAll,\n  getAll: brandActions.getAll,\n  addBrand: brandActions.add,\n  updateBrand: brandActions.update,\n  deleteBrand: brandActions.delete,\n};\n\nconst connectedBrandsPage = connect(mapState, actionCreators)(BrandsPage);\nexport {connectedBrandsPage as BrandsPage};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {userActions} from 'actions';\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Col,\n} from 'reactstrap';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.logout();\n\n    this.state = {\n      username: '',\n      password: '',\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    document.body.classList.toggle('login-page');\n  }\n\n  componentWillUnmount() {\n    document.body.classList.toggle('login-page');\n  }\n\n  handleChange = e => {\n    const {name, value} = e.target;\n    this.setState({[name]: value});\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.setState({submitted: true});\n    const {username, password} = this.state;\n    if (username && password) {\n      this.props.login(username, password);\n    }\n  };\n\n  render() {\n    const {username, password, submitted} = this.state;\n    const {alert} = this.props;\n    return (\n      <>\n        <div className=\"content\">\n          <Container>\n            <Col className=\"ml-auto mr-auto\" lg=\"4\" md=\"6\">\n              <Form className=\"form\" onSubmit={e => this.handleSubmit(e)}>\n                <Card className=\"card-login card-white\">\n                  <CardHeader>\n                    <img\n                      alt=\"...\"\n                      // eslint-disable-next-line no-undef\n                      src={require('assets/img/card-primary.png')}\n                    />\n                    <CardTitle tag=\"h1\">Log in</CardTitle>\n                  </CardHeader>\n                  <CardBody>\n                    {alert.message && (\n                      <div className={`alert ${alert.type}`}>\n                        {String(alert.message)}\n                      </div>\n                    )}\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"tim-icons icon-email-85\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        placeholder=\"Kullanıcı Adı\"\n                        type=\"username\"\n                        name=\"username\"\n                        onChange={this.handleChange}\n                      />\n                    </InputGroup>\n                    {submitted && !username && (\n                      <label className=\"error\" style={{color: 'red'}}>\n                        Kullanıcı Adı zorunludur.\n                      </label>\n                    )}\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"tim-icons icon-lock-circle\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        placeholder=\"Şifre\"\n                        type=\"password\"\n                        name=\"password\"\n                        onChange={this.handleChange}\n                      />\n                    </InputGroup>\n                    {submitted && !password && (\n                      <label className=\"error\" style={{color: 'red'}}>\n                        Şifre zorunludur.\n                      </label>\n                    )}\n                  </CardBody>\n                  <CardFooter>\n                    <Button\n                      block\n                      className=\"mb-3\"\n                      color=\"primary\"\n                      size=\"lg\"\n                      type=\"submit\"\n                      name=\"submit_button\"\n                    >\n                      Giriş\n                    </Button>\n                  </CardFooter>\n                </Card>\n              </Form>\n            </Col>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {alert} = state;\n\n  return {alert};\n}\n\nconst actionCreators = {\n  login: userActions.login,\n  logout: userActions.logout,\n};\n\nconst connectedLoginPage = connect(mapState, actionCreators)(LoginPage);\nexport {connectedLoginPage as LoginPage};\n","import React from 'react';\nimport ReactTable from 'react-table';\nimport NotificationAlert from 'react-notification-alert';\nimport BlockUi from 'react-block-ui';\nimport {Loader} from 'react-loaders';\nimport 'react-block-ui/style.css';\nimport 'loaders.css/loaders.min.css';\nimport {Card, CardBody, CardHeader, CardTitle, Col, Row} from 'reactstrap';\nimport {getLogs} from 'services/userService';\n\nclass Logs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.state = {\n      alert: null,\n      dataLoaded: false,\n      loaderType: 'ball-triangle-path',\n      message: 'Loading, please wait',\n    };\n  }\n\n  componentDidMount = async () => {\n    const data = await getLogs();\n    this.data = data.logs;\n    this.setState({\n      dataLoaded: true,\n    });\n  };\n\n  render() {\n    return (\n      <BlockUi\n        className=\"block-ui\"\n        keepInView\n        blocking={!this.state.dataLoaded}\n        message={this.state.message}\n        loader={<Loader active type={this.state.loaderType} color=\"#02a17c\" />}\n      >\n        <div className=\"rna-container\">\n          <NotificationAlert ref={this.notificationAlertRef} />\n        </div>\n        {this.state.alert}\n        <Row>\n          <Col xs={12} md={12}>\n            <Card style={{minHeight: '98vh', marginBottom: 0}}>\n              <CardHeader>\n                <CardTitle\n                  tag=\"h1\"\n                  style={{textAlign: 'center', fontWeight: 'bolder'}}\n                >\n                  Loglar\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <ReactTable\n                  sorted={[{id: 'timeStamp', desc: true}]}\n                  data={this.data}\n                  resizable={false}\n                  columns={[\n                    {\n                      Header: 'Kullanıcı',\n                      accessor: 'userName',\n                    },\n                    {\n                      Header: 'Mesaj',\n                      accessor: 'log',\n                    },\n                    {\n                      Header: 'TARİH',\n                      accessor: 'date',\n                    },\n                    {\n                      Header: 'time',\n                      accessor: 'timeStamp',\n                      show: false,\n                    },\n                    {\n                      Header: ' ',\n                      accessor: ' ',\n                      width: 0,\n                    },\n                  ]}\n                  showPaginationTop\n                  showPaginationBottom={false}\n                  filterable={true}\n                  minRows={0}\n                  defaultPageSize={10}\n                  className=\"-striped -highlight\"\n                  loading={false}\n                  nextText=\"İleri\"\n                  previousText=\"Geri\"\n                  pageText=\"Sayfa\"\n                  rowsText=\"Satır\"\n                  noDataText=\"Data bulunamadı!\"\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </BlockUi>\n    );\n  }\n}\n\nexport default Logs;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactTable from 'react-table';\nimport NotificationAlert from 'react-notification-alert';\nimport ReactBSAlert from 'react-bootstrap-sweetalert';\nimport BlockUi from 'react-block-ui';\nimport {Loader} from 'react-loaders';\nimport 'react-block-ui/style.css';\nimport 'loaders.css/loaders.min.css';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\nimport {getStockLogs} from 'services/userService';\nimport {\n  productActions,\n  supplierActions,\n  brandActions,\n  customerActions,\n} from 'actions';\nimport Select from 'react-select';\n\nclass StockLogs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.products = [];\n    this.suppliers = [];\n    this.customers = [];\n    this.startYear = 2020;\n    this.currentYear = new Date().getFullYear();\n    this.yearOptions = [\n      ...Array(this.currentYear - this.startYear + 1).keys(),\n    ].map(i => i + this.startYear);\n    this.monthOptions = Array.from({length: 12}, (e, i) => {\n      return new Date(null, i + 1, null).toLocaleDateString('tr', {\n        month: 'long',\n      });\n    });\n    this.typeOptions = [\n      {value: 'box', label: 'Kutulu Ürün'},\n      {value: 'material', label: 'Hammadde'},\n      {value: 'package', label: 'Ambalaj'},\n    ];\n    this.state = {\n      alert: null,\n      dataLoaded: false,\n      loaderType: 'ball-triangle-path',\n      message: 'Loading, please wait',\n      selectedYear: null,\n      selectedMonth: null,\n      selectedType: null,\n    };\n    this.notificationAlertRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    const data = await getStockLogs();\n    this.data = data.logs;\n    await this.props.getSuppliers();\n    await this.props.getBrands();\n    await this.props.getCustomers();\n    await this.props.getProducts();\n  };\n\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n\n  onYearSelect = value => {\n    this.setState({selectedYear: value});\n  };\n\n  onMonthSelect = value => {\n    this.setState({selectedMonth: value});\n  };\n\n  onTypeSelect = value => {\n    console.log(value);\n    this.setState({selectedType: value});\n  };\n\n  createReport = () => {\n    if (\n      this.state.selectedMonth &&\n      this.state.selectedYear &&\n      this.state.selectedType\n    ) {\n      let startDate = new Date(\n        this.state.selectedYear.value,\n        this.state.selectedMonth.value,\n      ).getTime();\n      let endDate;\n      if (this.state.selectedMonth.value === 11) {\n        endDate = new Date(this.state.selectedYear.value + 1, 0).getTime();\n      } else {\n        endDate = new Date(\n          this.state.selectedYear.value,\n          this.state.selectedMonth.value + 1,\n        ).getTime();\n      }\n      let reportData = this.data.filter(\n        e =>\n          e.timeStamp >= startDate &&\n          e.timeStamp <= endDate &&\n          e.productType === this.state.selectedType.label,\n      );\n      reportData.sort((a, b) =>\n        a.timeStamp > b.timeStamp ? 1 : b.timeStamp > a.timeStamp ? -1 : 0,\n      );\n      reportData = reportData.map(e => {\n        return [\n          e.type,\n          e.name,\n          e.customer?.companyName,\n          e.brandName,\n          e.supplierName,\n          e.oldStock,\n          e.newStock,\n          e.date,\n        ];\n      });\n      reportData.splice(0, 0, [\n        'Tür',\n        'Ürün Adı',\n        'Müşteri Adı',\n        'Marka',\n        'Tedarikçi',\n        'Eski Stok',\n        'Yeni Stok',\n        'Tarih',\n      ]);\n      var downloadLink = document.createElement('a');\n      let csvContent = reportData.map(e => e.join(',')).join('\\n');\n      let blob = new Blob([csvContent], {type: 'text/csv'});\n      var url = URL.createObjectURL(blob);\n      downloadLink.href = url;\n      downloadLink.download = 'data.csv';\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n      this.hideAlert();\n    } else {\n      this.notify('En az bir seçim yapmak zorundasınız.', 'danger');\n    }\n  };\n\n  createReportForm = () => {\n    const customStyles = {\n      menu: (provided, state) => ({\n        ...provided,\n        height: '200px',\n      }),\n      menuList: (provided, state) => ({\n        ...provided,\n        height: '200px',\n      }),\n    };\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'transparent'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          cancelBtnText=\"İptal\"\n          confirmBtnBsStyle=\"linkedin\"\n          cancelBtnBsStyle=\"danger\"\n          onConfirm={() => {}}\n          title=\"\"\n          confirmBtnText=\"Oluştur\"\n        >\n          <Card>\n            <CardHeader>\n              <CardTitle tag=\"h1\" style={{fontWeight: 'bold'}}>\n                Rapor Oluştur\n              </CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Select\n                placeholder=\"Yıl\"\n                onChange={value => this.onYearSelect(value)}\n                options={this.yearOptions.map(e => {\n                  return {label: e, value: e};\n                })}\n              />\n              <br />\n              <Select\n                placeholder=\"Ay\"\n                onChange={value => this.onMonthSelect(value)}\n                styles={customStyles}\n                options={this.monthOptions.map((e, index) => {\n                  return {value: index, label: e};\n                })}\n                name=\"MonthSelection\"\n              />\n              <br />\n              <Select\n                placeholder=\"Ürün Türü\"\n                onChange={value => this.onTypeSelect(value)}\n                options={this.typeOptions}\n              />\n            </CardBody>\n            <CardFooter className=\"text-right\">\n              <Button\n                color=\"danger\"\n                style={{float: 'left', fontSize: '1rem', fontWeight: 'bold'}}\n                onClick={this.hideAlert}\n              >\n                İptal\n              </Button>\n              <Button\n                color=\"success\"\n                onClick={this.createReport}\n                style={{fontSize: '1rem', fontWeight: 'bold'}}\n              >\n                Oluştur\n              </Button>\n            </CardFooter>\n          </Card>\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  notify = (e, notType) => {\n    var type = notType;\n    var options = {};\n    options = {\n      place: 'tr',\n      message: (\n        <div>\n          <div>{e}</div>\n        </div>\n      ),\n      type: type,\n      icon: 'tim-icons icon-alert-circle-exc',\n      autoDismiss: 5,\n    };\n    this.notificationAlertRef.current.notificationAlert(options);\n  };\n\n  componentDidUpdate() {\n    if (\n      this.props.customers.items &&\n      this.props.brands.items &&\n      this.props.suppliers.items &&\n      this.props.products.items &&\n      this.data !== [] &&\n      !this.state.dataLoaded\n    ) {\n      this.customers = this.props.customers.items.customers;\n      this.suppliers = this.props.suppliers.items.suppliers;\n      this.brands = this.props.brands.items.brands;\n      this.products = this.props.products.items.products;\n      this.data = this.data.map(value => {\n        let product = this.products.find(o => o.id === value.productId);\n        let customer = this.customers.find(o => o.id === value.customer);\n        let brand = this.brands.find(o => o.id === product?.brand);\n        let supplier = this.suppliers.find(o => o.id === product?.supplier);\n        return {\n          id: value.id,\n          oldStock: value.oldStock,\n          newStock: value.newStock,\n          customer: customer,\n          brand: brand,\n          brandName: brand?.name ? brand.name : value.brandName,\n          supplier: supplier,\n          supplierName: supplier?.name ? supplier.name : value.supplierName,\n          name: product?.name ? product.name : value.productName,\n          type: value?.type,\n          productType: value?.productType,\n          date: value.date,\n          timeStamp: value.timeStamp,\n        };\n      });\n      this.setState({\n        dataLoaded: true,\n      });\n    }\n  }\n  render() {\n    return (\n      <BlockUi\n        className=\"block-ui\"\n        keepInView\n        blocking={!this.state.dataLoaded}\n        renderChildren={false}\n        message={this.state.message}\n        loader={<Loader active type={this.state.loaderType} color=\"#02a17c\" />}\n      >\n        <div className=\"rna-container\">\n          <NotificationAlert ref={this.notificationAlertRef} />\n        </div>\n        {this.state.alert}\n        <Row>\n          <Col xs={12} md={12}>\n            <Card style={{minHeight: '98vh', marginBottom: 0}}>\n              <CardHeader>\n                <CardTitle\n                  tag=\"h1\"\n                  style={{textAlign: 'center', fontWeight: 'bolder'}}\n                >\n                  Stok Giriş/Çıkış\n                </CardTitle>\n                <Button\n                  className=\"float-right\"\n                  color=\"success\"\n                  onClick={this.createReportForm}\n                  style={{fontSize: '1rem', fontWeight: 'bold'}}\n                >\n                  Rapor Oluştur\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <ReactTable\n                  defaultSorted={[{id: 'timeStamp', desc: true}]}\n                  data={this.data}\n                  columns={[\n                    {\n                      Header: 'TÜR',\n                      accessor: 'type',\n                    },\n                    {\n                      Header: 'ÜRÜN TÜRÜ',\n                      accessor: 'productType',\n                    },\n                    {\n                      Header: 'ÜRÜN ADI',\n                      accessor: 'name',\n                    },\n                    {\n                      Header: 'TEDARİKÇİ',\n                      accessor: 'supplierName',\n                    },\n                    {\n                      Header: 'MARKA',\n                      accessor: 'brandName',\n                    },\n                    {\n                      Header: 'MÜŞTERİ',\n                      accessor: 'customer.companyName',\n                    },\n                    {\n                      Header: 'ESKİ STOK',\n                      accessor: 'oldStock',\n                    },\n                    {\n                      Header: 'YENİ STOK',\n                      accessor: 'newStock',\n                    },\n                    {\n                      Header: 'TARİH',\n                      accessor: 'date',\n                    },\n                    {\n                      Header: 'time',\n                      accessor: 'timeStamp',\n                      show: false,\n                    },\n                    {\n                      Header: ' ',\n                      accessor: ' ',\n                      width: 0,\n                    },\n                  ]}\n                  showPaginationTop\n                  showPaginationBottom={false}\n                  filterable={true}\n                  minRows={0}\n                  defaultPageSize={10}\n                  className=\"-striped -highlight\"\n                  loading={false}\n                  nextText=\"İleri\"\n                  previousText=\"Geri\"\n                  pageText=\"Sayfa\"\n                  rowsText=\"Satır\"\n                  noDataText=\"Data bulunamadı!\"\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </BlockUi>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {alert, products, suppliers, brands, customers} = state;\n\n  return {alert, products, suppliers, brands, customers};\n}\n\nconst actionCreators = {\n  getSuppliers: supplierActions.getAll,\n  getBrands: brandActions.getAll,\n  getCustomers: customerActions.getAll,\n  getProducts: productActions.getAll,\n};\n\nconst connectedProductsPage = connect(mapState, actionCreators)(StockLogs);\nexport {connectedProductsPage as StockLogs};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactTable from 'react-table';\nimport ReactBSAlert from 'react-bootstrap-sweetalert';\nimport NotificationAlert from 'react-notification-alert';\nimport BlockUi from 'react-block-ui';\nimport {Loader} from 'react-loaders';\nimport 'react-block-ui/style.css';\nimport 'loaders.css/loaders.min.css';\nimport classNames from 'classnames';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\nimport CustomForm from 'components/CustomForm';\nimport {productActions, supplierActions} from 'actions';\nimport {stockUpdate} from 'services/productService';\n\nclass PackagesPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.suppliers = [];\n    this.state = {\n      dataLoaded: false,\n      alert: null,\n      loaderType: 'ball-triangle-path',\n      message: 'Loading, please wait',\n    };\n    this.notificationAlertRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    await this.props.getSuppliers();\n    await this.props.getAll();\n  };\n\n  componentDidUpdate() {\n    if (\n      this.props.suppliers.items &&\n      this.props.products.items &&\n      !this.state.dataLoaded\n    ) {\n      this.suppliers = this.props.suppliers.items.suppliers;\n      this.data = this.props.products.items.products\n        .filter(o => o.type === 'package')\n        .map((value, key) => {\n          return {\n            id: value.id,\n            name: value.name,\n            supplier: this.suppliers.find(o => o.id === value.supplier),\n            stock: value.stock,\n            threshold: value.threshold,\n            actions: (\n              <div className=\"actions-right\">\n                {/* use this button to add a edit kind of action */}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'add');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-simple-add\" />\n                </Button>{' '}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'substract');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-simple-delete\" />\n                </Button>{' '}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'update');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-pencil\" />\n                </Button>{' '}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.deleteProductAlert(obj);\n                  }}\n                  color=\"danger\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-simple-remove\" />\n                </Button>{' '}\n              </div>\n            ),\n          };\n        });\n      this.setState({dataLoaded: true});\n    }\n  }\n\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n\n  addProduct = async data => {\n    this.hideAlert();\n    await this.props.addProduct({\n      ...data,\n      supplier: data.supplier.value,\n      stock: parseInt(data.stock),\n      type: 'package',\n    });\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  updateProduct = async (data, product, action) => {\n    this.hideAlert();\n    const stock =\n      action === 'add'\n        ? parseInt(product.stock) + parseInt(data.stock)\n        : action === 'substract'\n        ? parseInt(product.stock) - parseInt(data.stock)\n        : parseInt(data.stock);\n    const supplier =\n      action === 'update' ? data.supplier.value : product.supplier.id;\n    const {actions, ...oldProduct} = product;\n    const newProduct =\n      action === 'update'\n        ? {\n            ...data,\n            stock: stock,\n            id: product.id,\n            supplier: supplier,\n            type: 'package',\n          }\n        : {...oldProduct, supplier: supplier, stock: stock};\n    await this.props.updateProduct(newProduct);\n    if (this.props.alert.type === 'alert-success') {\n      if (action === 'add' || action === 'substract') {\n        if (stock !== product.stock) {\n          await stockUpdate({\n            productId: product.id,\n            productName: product.name,\n            supplierName: product.supplierName,\n            brandName: product.brandName,\n            type: action,\n            productType: 'package',\n            oldStock: product.stock,\n            newStock: stock,\n            customer: data.customer?.value,\n          });\n        }\n      }\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  deleteProduct = async data => {\n    this.hideAlert();\n    await this.props.deleteProduct(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  onError = (errors, e) => console.log('error', errors, e);\n\n  deleteProductAlert = product => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          danger\n          onCancel={this.hideAlert}\n          showCancel={true}\n          onConfirm={() => this.deleteProduct(product)}\n          title={product.name + ' isimli ürünü silmek istiyor musunuz?'}\n          confirmBtnText=\"Sil!\"\n          cancelBtnText=\"İptal\"\n          confirmBtnBsStyle=\"success\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      ),\n    });\n  };\n\n  updateProductAlert = (product, action) => {\n    const defaultValue = product.supplier;\n    let formName, submitText;\n    if (action === 'update') {\n      formName = 'Ürün Güncelleme';\n      submitText = 'Güncelleme';\n    } else if (action === 'add') {\n      formName = 'Stok Girişi';\n      submitText = 'Ekle';\n    } else if (action === 'substract') {\n      formName = 'Stok Çıkışı';\n      submitText = 'Çıkar';\n    }\n    const forms =\n      action === 'add' || action === 'substract'\n        ? [\n            {\n              label: 'Miktar*',\n              name: 'stock',\n              type: 'number',\n              placeholder: 'Miktar',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: 0,\n            },\n          ]\n        : [\n            {\n              label: 'Ambalaj adı*',\n              name: 'name',\n              type: 'input',\n              placeholder: 'İsim',\n              rules: {\n                required: true,\n              },\n              defaultValue: product.name,\n            },\n            {\n              label: 'Tedarikçi*',\n              name: 'supplier',\n              type: 'select',\n              placeholder: 'Tedarikçi',\n              rules: {\n                required: true,\n              },\n              defaultValue: defaultValue,\n              data: this.suppliers,\n            },\n            {\n              label: 'Stok*',\n              name: 'stock',\n              type: 'number',\n              placeholder: 'Stok',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: product.stock,\n            },\n            {\n              label: 'Email Sınırı*',\n              name: 'threshold',\n              type: 'number',\n              placeholder: 'Email Sınırı',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: product.threshold,\n            },\n          ];\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={formName}\n            submitText={submitText}\n            type=\"update\"\n            forms={forms}\n            onCancel={this.hideAlert}\n            onSubmit={data => this.updateProduct(data, product, action)}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  addProductAlert = () => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Kayıt Formu'}\n            submitText=\"Ekle\"\n            type=\"add\"\n            forms={[\n              {\n                label: 'Ambalaj Adı*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Tedarikçi*',\n                name: 'supplier',\n                type: 'select',\n                placeholder: 'Tedarikçi',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n                data: this.suppliers,\n              },\n              {\n                label: 'Stok*',\n                name: 'stock',\n                type: 'number',\n                placeholder: 'Stok',\n                rules: {\n                  required: true,\n                  min: 0,\n                },\n                defaultValue: 0,\n              },\n              {\n                label: 'Email Sınırı*',\n                name: 'threshold',\n                type: 'number',\n                placeholder: 'Email Sınırı',\n                rules: {\n                  required: true,\n                  min: 0,\n                },\n                defaultValue: 0,\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={this.addProduct}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  notify = (e, notType) => {\n    var type = notType;\n    var options = {};\n    options = {\n      place: 'tr',\n      message: (\n        <div>\n          <div>{e}</div>\n        </div>\n      ),\n      type: type,\n      icon: 'tim-icons icon-alert-circle-exc',\n      autoDismiss: 5,\n    };\n    this.notificationAlertRef.current.notificationAlert(options);\n  };\n\n  toggleBlocking = () => {\n    this.setState({blocking: !this.state.blocking});\n  };\n\n  render() {\n    return (\n      <BlockUi\n        className=\"block-ui\"\n        keepInView\n        blocking={!this.state.dataLoaded}\n        message={this.state.message}\n        loader={<Loader active type={this.state.loaderType} color=\"#02a17c\" />}\n      >\n        <div className=\"rna-container\">\n          <NotificationAlert ref={this.notificationAlertRef} />\n        </div>\n        {this.state.alert}\n        <Row>\n          <Col xs={12} md={12}>\n            <Card style={{minHeight: '98vh', marginBottom: 0}}>\n              <CardHeader>\n                <CardTitle\n                  tag=\"h1\"\n                  style={{textAlign: 'center', fontWeight: 'bolder'}}\n                >\n                  Ambalajlar\n                </CardTitle>\n                <Button\n                  className=\"float-right\"\n                  color=\"success\"\n                  onClick={this.addProductAlert}\n                  style={{fontSize: '1rem', fontWeight: 'bold'}}\n                >\n                  Yeni Ürün Ekle\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <ReactTable\n                  sorted={this.sortOptions}\n                  data={this.data}\n                  resizable={false}\n                  columns={[\n                    {\n                      Header: 'Ambalaj Adı',\n                      accessor: 'name',\n                    },\n                    {\n                      Header: 'TEDARİKÇİ',\n                      accessor: 'supplier.name',\n                    },\n                    {\n                      Header: 'Stok',\n                      accessor: 'stock',\n                    },\n                    {\n                      Header: 'İşlemler',\n                      accessor: 'actions',\n                      sortable: false,\n                      filterable: false,\n                    },\n                  ]}\n                  getTrProps={(state, rowInfo, column) => {\n                    if (rowInfo) {\n                      console.log(rowInfo.row);\n                      return {\n                        style: {\n                          background:\n                            rowInfo.row._original.threshold >\n                            rowInfo.row._original.stock\n                              ? 'rgba(255,0,0,0.3)'\n                              : 'transparent',\n                        },\n                      };\n                    } else {\n                      return {\n                        style: {\n                          background: 'transparent',\n                        },\n                      };\n                    }\n                  }}\n                  showPaginationTop\n                  showPaginationBottom={false}\n                  filterable={true}\n                  minRows={0}\n                  defaultPageSize={7}\n                  className=\"-striped -highlight\"\n                  loading={false}\n                  nextText=\"İleri\"\n                  previousText=\"Geri\"\n                  pageText=\"Sayfa\"\n                  rowsText=\"Satır\"\n                  noDataText=\"Data bulunamadı!\"\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </BlockUi>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {alert, products, suppliers} = state;\n\n  return {alert, products, suppliers};\n}\n\nconst actionCreators = {\n  getSuppliers: supplierActions.getAll,\n  getAll: productActions.getAll,\n  addProduct: productActions.add,\n  updateProduct: productActions.update,\n  deleteProduct: productActions.delete,\n};\n\nconst connectedProductsPage = connect(mapState, actionCreators)(PackagesPage);\nexport {connectedProductsPage as PackagesPage};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactTable from 'react-table';\nimport ReactBSAlert from 'react-bootstrap-sweetalert';\nimport NotificationAlert from 'react-notification-alert';\nimport BlockUi from 'react-block-ui';\nimport {Loader} from 'react-loaders';\nimport 'react-block-ui/style.css';\nimport 'loaders.css/loaders.min.css';\nimport classNames from 'classnames';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\nimport CustomForm from 'components/CustomForm';\nimport {\n  productActions,\n  supplierActions,\n  brandActions,\n  customerActions,\n} from 'actions';\nimport {stockUpdate} from 'services/productService';\n\nclass BoxedProductsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.suppliers = [];\n    this.brands = [];\n    this.customers = [];\n    this.state = {\n      dataLoaded: false,\n      alert: null,\n      loaderType: 'ball-triangle-path',\n      message: 'Loading, please wait',\n    };\n    this.notificationAlertRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    await this.props.getSuppliers();\n    await this.props.getBrands();\n    await this.props.getCustomers();\n    await this.props.getAll();\n  };\n\n  componentDidUpdate() {\n    if (\n      this.props.customers.items &&\n      this.props.brands.items &&\n      this.props.suppliers.items &&\n      this.props.products.items &&\n      !this.state.dataLoaded\n    ) {\n      this.customers = this.props.customers.items.customers;\n      this.suppliers = this.props.suppliers.items.suppliers;\n      this.brands = this.props.brands.items.brands;\n      this.data = this.props.products.items.products\n        .filter(o => o.type === 'box')\n        .map((value, key) => {\n          return {\n            id: value.id,\n            name: value.name,\n            supplier: this.suppliers.find(o => o.id === value.supplier),\n            brand: this.brands.find(o => o.id === value.brand),\n            stock: value.stock,\n            materialCount: value.materialCount,\n            packageCount: value.packageCount,\n            content: value.content,\n            threshold: value.threshold,\n            actions: (\n              <div className=\"actions-right\">\n                {/* use this button to add a edit kind of action */}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'box');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-app\" />\n                </Button>{' '}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'add');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-simple-add\" />\n                </Button>{' '}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'substract');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-simple-delete\" />\n                </Button>{' '}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'update');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-pencil\" />\n                </Button>{' '}\n                {/* use this button to remove the data row */}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.deleteProductAlert(obj);\n                  }}\n                  color=\"danger\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-simple-remove\" />\n                </Button>{' '}\n              </div>\n            ),\n          };\n        });\n      this.setState({dataLoaded: true});\n    }\n  }\n\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n\n  addProduct = async data => {\n    this.hideAlert();\n    let content = {};\n    for (let index = 1; index <= data.materialCount; index++) {\n      content[data['material_' + index].value] =\n        data['material_' + index + '_count'];\n    }\n    for (let index = 1; index <= data.packageCount; index++) {\n      content[data['package_' + index].value] =\n        data['package_' + index + '_count'];\n    }\n    let boxed_product = {\n      name: data.name,\n      supplier: data.supplier.value,\n      brand: data.brand.value,\n      stock: parseInt(data.stock),\n      materialCount: parseInt(data.materialCount),\n      packageCount: parseInt(data.packageCount),\n      threshold: data.threshold,\n      content: content,\n    };\n    await this.props.addProduct({...boxed_product, type: 'box'});\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n  updateProduct = async (data, product, action) => {\n    this.hideAlert();\n    let stock = 0;\n    if (action === 'box') {\n      await this.props.packageProduct({\n        id: product.id,\n        amount: parseInt(data.stock),\n      });\n      stock = parseInt(product.stock) + parseInt(data.stock);\n    } else {\n      stock =\n        action === 'add'\n          ? parseInt(product.stock) + parseInt(data.stock)\n          : action === 'substract'\n          ? parseInt(product.stock) - parseInt(data.stock)\n          : parseInt(data.stock);\n      const supplier =\n        action === 'update' ? data.supplier.value : product.supplier.id;\n      const brand = action === 'update' ? data.brand.value : product.brand.id;\n      const {actions, ...oldProduct} = product;\n      let content = {};\n      for (let index = 1; index <= data.materialCount; index++) {\n        content[data['material_' + index].value] =\n          data['material_' + index + '_count'];\n      }\n      for (let index = 1; index <= data.packageCount; index++) {\n        content[data['package_' + index].value] =\n          data['package_' + index + '_count'];\n      }\n      let boxed_product = {\n        name: data.name,\n        supplier: supplier,\n        brand: brand,\n        materialCount: parseInt(data.materialCount),\n        packageCount: parseInt(data.packageCount),\n        content: content,\n        threshold: data.threshold,\n      };\n      const newProduct =\n        action === 'update'\n          ? {\n              ...boxed_product,\n              id: product.id,\n              stock: stock,\n              type: 'box',\n            }\n          : {...oldProduct, supplier: supplier, brand: brand, stock: stock};\n      await this.props.updateProduct(newProduct);\n    }\n    if (this.props.alert.type === 'alert-success') {\n      if (action === 'add' || action === 'substract' || action === 'box') {\n        if (stock !== product.stock) {\n          await stockUpdate({\n            productId: product.id,\n            productName: product.name,\n            supplierName: product.supplierName,\n            brandName: product.brandName,\n            type: action,\n            productType: 'box',\n            oldStock: product.stock,\n            newStock: stock,\n            customer: data.customer?.value,\n          });\n        }\n      }\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  deleteProduct = async data => {\n    this.hideAlert();\n    await this.props.deleteProduct(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  onError = (errors, e) => console.log('error', errors, e);\n\n  deleteProductAlert = product => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          danger\n          onCancel={this.hideAlert}\n          showCancel={true}\n          onConfirm={() => this.deleteProduct(product)}\n          title={product.name + ' isimli ürünü silmek istiyor musunuz?'}\n          confirmBtnText=\"Sil!\"\n          cancelBtnText=\"İptal\"\n          confirmBtnBsStyle=\"success\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      ),\n    });\n  };\n\n  updateProductAlert = (product, action) => {\n    const defaultSupplierValue = product.supplier;\n    const defaultBrandValue = product.brand;\n    let materials = [];\n    let packages = [];\n    for (let [key, value] of Object.entries(product.content)) {\n      let item = this.props.products.items.products.find(o => o.id === key);\n      if (item.type === 'material') {\n        materials.push({\n          item: {value: item.id, label: item.name},\n          stock: value,\n        });\n      } else if (item.type === 'package') {\n        packages.push({\n          item: {value: item.id, label: item.name},\n          stock: value,\n        });\n      }\n    }\n    let formName, submitText;\n    if (action === 'update') {\n      formName = 'Ürün Güncelleme';\n      submitText = 'Güncelleme';\n    } else if (action === 'add') {\n      formName = 'Stok Girişi';\n      submitText = 'Ekle';\n    } else if (action === 'substract') {\n      formName = 'Stok Çıkışı';\n      submitText = 'Çıkar';\n    } else if (action === 'box') {\n      formName = 'Ürün Paketleme';\n      submitText = 'Paketle';\n    }\n    const forms =\n      action === 'substract'\n        ? [\n            {\n              label: 'Miktar*',\n              name: 'stock',\n              type: 'number',\n              placeholder: 'Miktar',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: 0,\n            },\n            {\n              label: 'Müşteri*',\n              name: 'customer',\n              type: 'select',\n              placeholder: 'Müşteri',\n              rules: {\n                required: true,\n              },\n              defaultValue: '',\n              data: this.customers,\n            },\n          ]\n        : action === 'add' || action === 'box'\n        ? [\n            {\n              label: 'Miktar*',\n              name: 'stock',\n              type: 'number',\n              placeholder: 'Miktar',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: 0,\n            },\n          ]\n        : [\n            {\n              label: 'Kutulu Ürün Adı*',\n              name: 'name',\n              type: 'input',\n              placeholder: 'İsim',\n              rules: {\n                required: true,\n              },\n              defaultValue: product.name,\n            },\n            {\n              label: 'Tedarikçi*',\n              name: 'supplier',\n              type: 'select',\n              placeholder: 'Tedarikçi',\n              rules: {\n                required: true,\n              },\n              defaultValue: defaultSupplierValue,\n              data: this.suppliers,\n            },\n            {\n              label: 'Marka*',\n              name: 'brand',\n              type: 'select',\n              placeholder: 'Marka',\n              rules: {\n                required: true,\n              },\n              defaultValue: defaultBrandValue,\n              data: this.brands,\n            },\n            {\n              label: 'Hammadde Sayısı*',\n              name: 'materialCount',\n              type: 'number',\n              placeholder: 'Hammadde Sayısı',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: product.materialCount,\n            },\n            {\n              label: 'Ambalaj Sayısı*',\n              name: 'packageCount',\n              type: 'number',\n              placeholder: 'Ambalaj Sayısı',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: product.packageCount,\n            },\n            {\n              label: 'Stok*',\n              name: 'stock',\n              type: 'input',\n              placeholder: 'Stok',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: product.stock,\n            },\n            {\n              label: 'Email Sınırı*',\n              name: 'threshold',\n              type: 'number',\n              placeholder: 'Email Sınırı',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: product.threshold,\n            },\n          ];\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={formName}\n            submitText={submitText}\n            type=\"update\"\n            spec=\"box\"\n            forms={forms}\n            suppliers={this.suppliers}\n            materials={materials}\n            packages={packages}\n            products={this.props.products.items.products}\n            onCancel={this.hideAlert}\n            onSubmit={data => this.updateProduct(data, product, action)}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  addProductAlert = () => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Kayıt Formu'}\n            spec=\"box\"\n            submitText=\"Ekle\"\n            type=\"add\"\n            suppliers={this.suppliers}\n            materials={[]}\n            packages={[]}\n            products={this.props.products.items.products}\n            forms={[\n              {\n                label: 'Kutulu Ürün Adı*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Tedarikçi*',\n                name: 'supplier',\n                type: 'select',\n                placeholder: 'Tedarikçi',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n                data: this.suppliers,\n              },\n              {\n                label: 'Marka*',\n                name: 'brand',\n                type: 'select',\n                placeholder: 'Marka',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n                data: this.brands,\n              },\n              {\n                label: 'Hammadde Sayısı*',\n                name: 'materialCount',\n                type: 'number',\n                placeholder: 'Hammadde Sayısı',\n                rules: {\n                  required: true,\n                  min: 0,\n                },\n                defaultValue: 0,\n              },\n              {\n                label: 'Ambalaj Sayısı*',\n                name: 'packageCount',\n                type: 'number',\n                placeholder: 'Ambalaj Sayısı',\n                rules: {\n                  required: true,\n                },\n                defaultValue: 0,\n              },\n              {\n                label: 'Stok*',\n                name: 'stock',\n                type: 'input',\n                placeholder: 'Stok',\n                rules: {\n                  required: true,\n                  min: 0,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Email Sınırı*',\n                name: 'threshold',\n                type: 'number',\n                placeholder: 'Email Sınırı',\n                rules: {\n                  required: true,\n                  min: 0,\n                },\n                defaultValue: 0,\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={this.addProduct}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  notify = (e, notType) => {\n    var type = notType;\n    var options = {};\n    options = {\n      place: 'tr',\n      message: (\n        <div>\n          <div>{e}</div>\n        </div>\n      ),\n      type: type,\n      icon: 'tim-icons icon-alert-circle-exc',\n      autoDismiss: 5,\n    };\n    this.notificationAlertRef.current.notificationAlert(options);\n  };\n\n  toggleBlocking = () => {\n    this.setState({blocking: !this.state.blocking});\n  };\n\n  render() {\n    return (\n      <BlockUi\n        className=\"block-ui\"\n        keepInView\n        blocking={!this.state.dataLoaded}\n        message={this.state.message}\n        loader={<Loader active type={this.state.loaderType} color=\"#02a17c\" />}\n      >\n        <div className=\"rna-container\">\n          <NotificationAlert ref={this.notificationAlertRef} />\n        </div>\n        {this.state.alert}\n        <Row>\n          <Col xs={12} md={12}>\n            <Card style={{minHeight: '98vh', marginBottom: 0}}>\n              <CardHeader>\n                <CardTitle\n                  tag=\"h1\"\n                  style={{textAlign: 'center', fontWeight: 'bolder'}}\n                >\n                  Kutulu Ürünler\n                </CardTitle>\n                <Button\n                  className=\"float-right\"\n                  color=\"success\"\n                  onClick={this.addProductAlert}\n                  style={{fontSize: '1rem', fontWeight: 'bold'}}\n                >\n                  Yeni Ürün Ekle\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <ReactTable\n                  sorted={this.sortOptions}\n                  data={this.data}\n                  resizable={false}\n                  columns={[\n                    {\n                      Header: 'Kutulu Ürün Adı',\n                      accessor: 'name',\n                    },\n                    {\n                      Header: 'TEDARİKÇİ',\n                      accessor: 'supplier.name',\n                    },\n                    {\n                      Header: 'Marka',\n                      accessor: 'brand.name',\n                    },\n                    {\n                      Header: 'Stok',\n                      accessor: 'stock',\n                    },\n                    {\n                      Header: 'İşlemler',\n                      accessor: 'actions',\n                      sortable: false,\n                      filterable: false,\n                    },\n                  ]}\n                  getTrProps={(state, rowInfo, column) => {\n                    if (rowInfo) {\n                      console.log(rowInfo.row);\n                      return {\n                        style: {\n                          background:\n                            rowInfo.row._original.threshold >\n                            rowInfo.row._original.stock\n                              ? 'rgba(255,0,0,0.3)'\n                              : 'transparent',\n                        },\n                      };\n                    } else {\n                      return {\n                        style: {\n                          background: 'transparent',\n                        },\n                      };\n                    }\n                  }}\n                  showPaginationTop\n                  showPaginationBottom={false}\n                  filterable={true}\n                  minRows={0}\n                  defaultPageSize={7}\n                  className=\"-striped -highlight\"\n                  loading={false}\n                  nextText=\"İleri\"\n                  previousText=\"Geri\"\n                  pageText=\"Sayfa\"\n                  rowsText=\"Satır\"\n                  noDataText=\"Data bulunamadı!\"\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </BlockUi>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {alert, products, suppliers, brands, customers} = state;\n\n  return {alert, products, suppliers, brands, customers};\n}\n\nconst actionCreators = {\n  getSuppliers: supplierActions.getAll,\n  getBrands: brandActions.getAll,\n  getCustomers: customerActions.getAll,\n  getAll: productActions.getAll,\n  packageProduct: productActions.packageProduct,\n  addProduct: productActions.add,\n  updateProduct: productActions.update,\n  deleteProduct: productActions.delete,\n};\n\nconst connectedProductsPage = connect(\n  mapState,\n  actionCreators,\n)(BoxedProductsPage);\nexport {connectedProductsPage as BoxedProductsPage};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactTable from 'react-table';\nimport ReactBSAlert from 'react-bootstrap-sweetalert';\nimport NotificationAlert from 'react-notification-alert';\nimport BlockUi from 'react-block-ui';\nimport {Loader} from 'react-loaders';\nimport 'react-block-ui/style.css';\nimport 'loaders.css/loaders.min.css';\nimport classNames from 'classnames';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\nimport CustomForm from 'components/CustomForm';\nimport {productActions, supplierActions} from 'actions';\nimport {stockUpdate} from 'services/productService';\n\nclass MaterialsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.suppliers = [];\n    this.state = {\n      dataLoaded: false,\n      alert: null,\n      loaderType: 'ball-triangle-path',\n      message: 'Loading, please wait',\n    };\n    this.notificationAlertRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    await this.props.getSuppliers();\n    await this.props.getAll();\n  };\n\n  componentDidUpdate() {\n    if (\n      this.props.suppliers.items &&\n      this.props.products.items &&\n      !this.state.dataLoaded\n    ) {\n      this.suppliers = this.props.suppliers.items.suppliers;\n      this.data = this.props.products.items.products\n        .filter(o => o.type === 'material')\n        .map((value, key) => {\n          return {\n            id: value.id,\n            name: value.name,\n            supplier: this.suppliers.find(o => o.id === value.supplier),\n            stock: value.stock,\n            country: value.country,\n            threshold: value.threshold,\n            actions: (\n              <div className=\"actions-right\">\n                {/* use this button to add a edit kind of action */}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'add');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-simple-add\" />\n                </Button>{' '}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'substract');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-simple-delete\" />\n                </Button>{' '}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.updateProductAlert(obj, 'update');\n                  }}\n                  color=\"warning\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-pencil\" />\n                </Button>{' '}\n                <Button\n                  onClick={() => {\n                    let obj = this.data.find(o => o.id === value.id);\n                    this.deleteProductAlert(obj);\n                  }}\n                  color=\"danger\"\n                  size=\"sm\"\n                  className={classNames('btn-icon btn-link like btn-neutral')}\n                >\n                  <i className=\"tim-icons icon-simple-remove\" />\n                </Button>{' '}\n              </div>\n            ),\n          };\n        });\n      this.setState({dataLoaded: true});\n    }\n  }\n\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n\n  addProduct = async data => {\n    this.hideAlert();\n    await this.props.addProduct({\n      ...data,\n      stock: parseInt(data.stock),\n      supplier: data.supplier.value,\n      type: 'material',\n    });\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  updateProduct = async (data, product, action) => {\n    this.hideAlert();\n    const stock =\n      action === 'add'\n        ? parseInt(product.stock) + parseInt(data.stock)\n        : action === 'substract'\n        ? parseInt(product.stock) - parseInt(data.stock)\n        : parseInt(data.stock);\n    const supplier =\n      action === 'update' ? data.supplier.value : product.supplier.id;\n    const {actions, ...oldProduct} = product;\n    const newProduct =\n      action === 'update'\n        ? {\n            ...data,\n            stock: parseInt(data.stock),\n            id: product.id,\n            supplier: supplier,\n            type: 'material',\n          }\n        : {...oldProduct, supplier: supplier, stock: stock};\n    await this.props.updateProduct(newProduct);\n    if (this.props.alert.type === 'alert-success') {\n      if (action === 'add' || action === 'substract') {\n        if (stock !== product.stock) {\n          await stockUpdate({\n            productId: product.id,\n            productName: product.name,\n            supplierName: product.supplierName,\n            brandName: product.brandName,\n            type: action,\n            productType: 'material',\n            oldStock: product.stock,\n            newStock: stock,\n            customer: data.customer?.value,\n          });\n        }\n      }\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  deleteProduct = async data => {\n    this.hideAlert();\n    await this.props.deleteProduct(data);\n    if (this.props.alert.type === 'alert-success') {\n      this.notify(this.props.alert.message, 'success');\n      await this.props.getAll();\n      this.setState({dataLoaded: false});\n    } else {\n      this.notify(this.props.alert.message, 'danger');\n    }\n  };\n\n  onError = (errors, e) => console.log('error', errors, e);\n\n  deleteProductAlert = product => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          danger\n          onCancel={this.hideAlert}\n          showCancel={true}\n          onConfirm={() => this.deleteProduct(product)}\n          title={product.name + ' isimli ürünü silmek istiyor musunuz?'}\n          confirmBtnText=\"Sil!\"\n          cancelBtnText=\"İptal\"\n          confirmBtnBsStyle=\"success\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      ),\n    });\n  };\n\n  updateProductAlert = (product, action) => {\n    const defaultValue = product.supplier;\n    let formName, submitText;\n    if (action === 'update') {\n      formName = 'Ürün Güncelleme';\n      submitText = 'Güncelleme';\n    } else if (action === 'add') {\n      formName = 'Stok Girişi';\n      submitText = 'Ekle';\n    } else if (action === 'substract') {\n      formName = 'Stok Çıkışı';\n      submitText = 'Çıkar';\n    }\n    const forms =\n      action === 'add' || action === 'substract'\n        ? [\n            {\n              label: 'Miktar*',\n              name: 'stock',\n              type: 'number',\n              placeholder: 'Miktar',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: 0,\n            },\n          ]\n        : [\n            {\n              label: 'Hammadde adı*',\n              name: 'name',\n              type: 'input',\n              placeholder: 'İsim',\n              rules: {\n                required: true,\n              },\n              defaultValue: product.name,\n            },\n            {\n              label: 'Tedarikçi*',\n              name: 'supplier',\n              type: 'select',\n              placeholder: 'Tedarikçi',\n              rules: {\n                required: true,\n              },\n              defaultValue: defaultValue,\n              data: this.suppliers,\n            },\n            {\n              label: 'Stok*',\n              name: 'stock',\n              type: 'number',\n              placeholder: 'Stok',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: product.stock,\n            },\n            {\n              label: 'Menşei',\n              name: 'country',\n              type: 'input',\n              placeholder: 'Menşei',\n              rules: {\n                required: false,\n              },\n              defaultValue: product.country,\n            },\n            {\n              label: 'Email Sınırı*',\n              name: 'threshold',\n              type: 'number',\n              placeholder: 'Email Sınırı',\n              rules: {\n                required: true,\n                min: 0,\n              },\n              defaultValue: product.threshold,\n            },\n          ];\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={formName}\n            type=\"update\"\n            submitText={submitText}\n            forms={forms}\n            onCancel={this.hideAlert}\n            onSubmit={data => this.updateProduct(data, product, action)}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  addProductAlert = () => {\n    this.setState({\n      alert: (\n        <ReactBSAlert\n          style={{backgroundColor: 'none'}}\n          onCancel={this.hideAlert}\n          showConfirm={false}\n          onConfirm={() => {}}\n          title=\"\"\n        >\n          <CustomForm\n            name={'Kayıt Formu'}\n            submitText=\"Ekle\"\n            type=\"add\"\n            forms={[\n              {\n                label: 'Hammadde Adı*',\n                name: 'name',\n                type: 'input',\n                placeholder: 'İsim',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Tedarikçi*',\n                name: 'supplier',\n                type: 'select',\n                placeholder: 'Tedarikçi',\n                rules: {\n                  required: true,\n                },\n                defaultValue: '',\n                data: this.suppliers,\n              },\n              {\n                label: 'Stok*',\n                name: 'stock',\n                type: 'number',\n                placeholder: 'Stok',\n                rules: {\n                  required: true,\n                  min: 0,\n                },\n                defaultValue: 0,\n              },\n              {\n                label: 'Menşei',\n                name: 'country',\n                type: 'input',\n                placeholder: 'Menşei',\n                rules: {\n                  required: false,\n                },\n                defaultValue: '',\n              },\n              {\n                label: 'Email Sınırı*',\n                name: 'threshold',\n                type: 'number',\n                placeholder: 'Email Sınırı',\n                rules: {\n                  required: true,\n                  min: 0,\n                },\n                defaultValue: 0,\n              },\n            ]}\n            onCancel={this.hideAlert}\n            onSubmit={this.addProduct}\n            onError={this.onError}\n          />\n        </ReactBSAlert>\n      ),\n    });\n  };\n\n  notify = (e, notType) => {\n    var type = notType;\n    var options = {};\n    options = {\n      place: 'tr',\n      message: (\n        <div>\n          <div>{e}</div>\n        </div>\n      ),\n      type: type,\n      icon: 'tim-icons icon-alert-circle-exc',\n      autoDismiss: 5,\n    };\n    this.notificationAlertRef.current.notificationAlert(options);\n  };\n\n  toggleBlocking = () => {\n    this.setState({blocking: !this.state.blocking});\n  };\n\n  render() {\n    return (\n      <BlockUi\n        className=\"block-ui\"\n        keepInView\n        blocking={!this.state.dataLoaded}\n        message={this.state.message}\n        loader={<Loader active type={this.state.loaderType} color=\"#02a17c\" />}\n      >\n        <div className=\"rna-container\">\n          <NotificationAlert ref={this.notificationAlertRef} />\n        </div>\n        {this.state.alert}\n        <Row>\n          <Col xs={12} md={12}>\n            <Card style={{minHeight: '98vh', marginBottom: 0}}>\n              <CardHeader>\n                <CardTitle\n                  tag=\"h1\"\n                  style={{textAlign: 'center', fontWeight: 'bolder'}}\n                >\n                  Hammaddeler\n                </CardTitle>\n                <Button\n                  className=\"float-right\"\n                  color=\"success\"\n                  onClick={this.addProductAlert}\n                  style={{fontSize: '1rem', fontWeight: 'bold'}}\n                >\n                  Yeni Ürün Ekle\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <ReactTable\n                  sorted={this.sortOptions}\n                  data={this.data}\n                  resizable={false}\n                  columns={[\n                    {\n                      Header: 'Hammadde Adı',\n                      accessor: 'name',\n                    },\n                    {\n                      Header: 'TEDARİKÇİ',\n                      accessor: 'supplier.name',\n                    },\n                    {\n                      Header: 'Stok',\n                      accessor: 'stock',\n                    },\n                    {\n                      Header: 'MENŞEİ',\n                      accessor: 'country',\n                    },\n                    {\n                      Header: 'İşlemler',\n                      accessor: 'actions',\n                      sortable: false,\n                      filterable: false,\n                    },\n                  ]}\n                  getTrProps={(state, rowInfo, column) => {\n                    if (rowInfo) {\n                      console.log(rowInfo.row);\n                      return {\n                        style: {\n                          background:\n                            rowInfo.row._original.threshold >\n                            rowInfo.row._original.stock\n                              ? 'rgba(255,0,0,0.3)'\n                              : 'transparent',\n                        },\n                      };\n                    } else {\n                      return {\n                        style: {\n                          background: 'transparent',\n                        },\n                      };\n                    }\n                  }}\n                  showPaginationTop\n                  showPaginationBottom={false}\n                  filterable={true}\n                  minRows={0}\n                  defaultPageSize={7}\n                  className=\"-striped -highlight\"\n                  loading={false}\n                  nextText=\"İleri\"\n                  previousText=\"Geri\"\n                  pageText=\"Sayfa\"\n                  rowsText=\"Satır\"\n                  noDataText=\"Data bulunamadı!\"\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </BlockUi>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {alert, products, suppliers} = state;\n\n  return {alert, products, suppliers};\n}\n\nconst actionCreators = {\n  getSuppliers: supplierActions.getAll,\n  getAll: productActions.getAll,\n  addProduct: productActions.add,\n  updateProduct: productActions.update,\n  deleteProduct: productActions.delete,\n};\n\nconst connectedProductsPage = connect(mapState, actionCreators)(MaterialsPage);\nexport {connectedProductsPage as MaterialsPage};\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport routes from 'routes.js';\nimport {Row, Col, Button, UncontrolledTooltip} from 'reactstrap';\nimport {userActions} from 'actions';\nimport classNames from 'classnames';\nvar ps;\n\nclass AdminLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeColor: 'green',\n      sidebarMini: true,\n      opacity: 0,\n      sidebarOpened: false,\n    };\n    this.mainPanelRef = React.createRef();\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      document.documentElement.className += ' perfect-scrollbar-on';\n      document.documentElement.classList.remove('perfect-scrollbar-off');\n      ps = new PerfectScrollbar(this.mainPanelRef.current);\n      let tables = document.querySelectorAll('.table-responsive');\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    window.addEventListener('scroll', this.showNavbarButton);\n    window.addEventListener('beforeunload', this.componentGracefulUnmount);\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps.destroy();\n      document.documentElement.className += ' perfect-scrollbar-off';\n      document.documentElement.classList.remove('perfect-scrollbar-on');\n    }\n    window.removeEventListener('scroll', this.showNavbarButton);\n    this.componentGracefulUnmount();\n  }\n\n  componentGracefulUnmount = () => {\n    window.removeEventListener('beforeunload', this.componentGracefulUnmount);\n  };\n\n  componentDidUpdate(e) {\n    if (e.location.pathname !== e.history.location.pathname) {\n      if (navigator.platform.indexOf('Win') > -1) {\n        let tables = document.querySelectorAll('.table-responsive');\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.mainPanelRef.current.scrollTop = 0;\n    }\n  }\n\n  showNavbarButton = () => {\n    if (\n      document.documentElement.scrollTop > 50 ||\n      document.scrollingElement.scrollTop > 50 ||\n      this.mainPanelRef.current.scrollTop > 50\n    ) {\n      this.setState({opacity: 1});\n    } else if (\n      document.documentElement.scrollTop <= 50 ||\n      document.scrollingElement.scrollTop <= 50 ||\n      this.mainPanelRef.current.scrollTop <= 50\n    ) {\n      this.setState({opacity: 0});\n    }\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return this.getRoutes(prop.views);\n      }\n      if (prop.layout === '/admin') {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            // component={prop.component}\n            key={key}\n            render={props => (\n              <prop.component\n                {...props}\n                logout={this.props.logout}\n                authInfo={this.props.authentication}\n              />\n            )}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  toggleSidebar = () => {\n    this.setState({\n      sidebarOpened: !this.state.sidebarOpened,\n    });\n    document.documentElement.classList.toggle('nav-open');\n  };\n\n  closeSidebar = () => {\n    this.setState({\n      sidebarOpened: false,\n    });\n    document.documentElement.classList.remove('nav-open');\n  };\n\n  handleMiniClick = () => {\n    if (document.body.classList.contains('sidebar-mini')) {\n      this.setState({sidebarMini: false});\n    } else {\n      this.setState({sidebarMini: true});\n    }\n    document.body.classList.toggle('sidebar-mini');\n    this.toggleSidebar();\n  };\n\n  isSidebar = () => {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          activeColor={this.state.activeColor}\n          // logo={{\n          //   outterLink: 'https://www.neurocess.co/',\n          //   text: 'Neurocess',\n          //   imgSrc: neurocess,\n          // }}\n          closeSidebar={this.closeSidebar}\n        />\n        <Col sm={1} className=\"navbar-responsive\">\n          <div className=\"navbar-minimize-fixed\" style={{opacity: 1}}>\n            <Button\n              className=\"minimize-sidebar btn btn-just-icon\"\n              color=\"link\"\n              id=\"tooltip209599\"\n              onClick={this.handleMiniClick}\n              style={{color: 'white'}}\n            >\n              <i className=\"tim-icons icon-align-center visible-on-sidebar-regular\" />\n              <i className=\"tim-icons icon-bullet-list-67 visible-on-sidebar-mini\" />\n            </Button>\n            <UncontrolledTooltip\n              delay={0}\n              target=\"tooltip209599\"\n              placement=\"right\"\n            >\n              Sidebar toggle\n            </UncontrolledTooltip>\n          </div>\n        </Col>\n        <Col xl=\"11\" lg=\"12\" sm=\"12\" style={{paddingLeft: 0}}>\n          <div\n            className=\"main-panel\"\n            ref={this.mainPanelRef}\n            data={this.state.activeColor}\n          >\n            <div className=\"navbar-absolute navbar-transparent navbar navbar-expand-lg\">\n              <div className=\"navbar-wrapper\">\n                <div\n                  className={classNames('navbar-toggle d-inline', {\n                    toggled: this.state.sidebarOpened,\n                  })}\n                >\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.handleMiniClick}\n                  >\n                    <span className=\"navbar-toggler-bar bar1\" />\n                    <span className=\"navbar-toggler-bar bar2\" />\n                    <span className=\"navbar-toggler-bar bar3\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n            <Switch>{this.getRoutes(routes)}</Switch>\n          </div>\n        </Col>{' '}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Row>{this.isSidebar()}</Row>\n      </div>\n    );\n  }\n}\n\nfunction mapState(state) {\n  const {authentication} = state;\n\n  return {authentication};\n}\n\nconst actionCreators = {\n  logout: userActions.logout,\n};\n\nconst connectedLoginPage = connect(mapState, actionCreators)(AdminLayout);\nexport {connectedLoginPage as AdminLayout};\n","import {UsersPage} from 'views/Users.js';\nimport {CustomersPage} from 'views/Customers.js';\nimport {SuppliersPage} from 'views/Suppliers.js';\nimport {BrandsPage} from 'views/Brands.js';\nimport {LoginPage} from 'views/Login.js';\nimport Logs from 'views/Logs';\nimport {StockLogs} from 'views/Stocks';\nimport {PackagesPage} from 'views/Packages';\nimport {BoxedProductsPage} from 'views/Boxes';\nimport {MaterialsPage} from 'views/Materials';\n\nconst routes = [\n  {\n    collapse: true,\n    name: 'Mevcut Stok',\n    icon: 'tim-icons icon-chart-pie-36',\n    state: 'pagesCollapse',\n    views: [\n      {\n        path: '/boxed-products',\n        name: 'Kutulu Ürün',\n        mini: 'k.ü.',\n        component: BoxedProductsPage,\n        layout: '/admin',\n      },\n      {\n        path: '/materials',\n        name: 'Hammadde',\n        mini: 'ham.',\n        component: MaterialsPage,\n        layout: '/admin',\n      },\n      {\n        path: '/packages',\n        name: 'Ambalaj',\n        mini: 'a.',\n        component: PackagesPage,\n        layout: '/admin',\n      },\n    ],\n  },\n  {\n    path: '/brands',\n    name: 'MARKALAR',\n    icon: 'tim-icons icon-bag-16',\n    component: BrandsPage,\n    layout: '/admin',\n  },\n  {\n    path: '/suppliers',\n    name: 'TEDARİKÇİLER',\n    icon: 'tim-icons icon-delivery-fast',\n    component: SuppliersPage,\n    layout: '/admin',\n  },\n  {\n    path: '/customers',\n    name: 'MÜŞTERİLER',\n    icon: 'tim-icons icon-bus-front-12',\n    component: CustomersPage,\n    layout: '/admin',\n  },\n  {\n    path: '/stockLogs',\n    name: 'Stok GİRİŞ-ÇIKIŞ',\n    icon: 'tim-icons icon-notes',\n    component: StockLogs,\n    layout: '/admin',\n  },\n  {\n    path: '/users',\n    name: 'KULLANICILAR',\n    icon: 'tim-icons icon-book-bookmark',\n    component: UsersPage,\n    layout: '/admin',\n  },\n  {\n    path: '/logs',\n    name: 'Loglar',\n    icon: 'tim-icons icon-paper',\n    component: Logs,\n    layout: '/admin',\n  },\n  {\n    path: '/login',\n    name: 'Log Out',\n    icon: 'fas fa-sign-out-alt',\n    mini: 'LO',\n    component: LoginPage,\n    layout: '/auth',\n  },\n];\n\nexport default routes;\n","/*eslint-disable*/\nimport React from 'react';\nimport {Container} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={'footer' + (this.props.default ? ' footer-default' : '')}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with{' '}\n            <i className=\"tim-icons icon-heart-2\" /> by{' '}\n            <a href=\"https://furkandoganktf.github.io\" target=\"_blank\">\n              FD\n            </a>{' '}\n            for a better organization.\n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Footer from 'components/Footer/Footer.js';\nimport routes from 'routes.js';\n\nclass AuthLayout extends React.Component {\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return this.getRoutes(prop.views);\n      }\n      if (prop.layout === '/auth') {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getActiveRoute = routes => {\n    let activeRoute = 'moya';\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = this.getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (\n          window.location.pathname.indexOf(\n            routes[i].layout + routes[i].path,\n          ) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  getFullPageName = routes => {\n    let pageName = this.getActiveRoute(routes);\n    switch (pageName) {\n      case 'Login':\n        return 'login-page';\n      case 'Register':\n        return 'register-page';\n      default:\n        return 'moya';\n    }\n  };\n  componentDidMount() {\n    document.documentElement.classList.remove('nav-open');\n    localStorage.removeItem('user');\n  }\n  render() {\n    return (\n      <>\n        <div className=\"wrapper wrapper-full-page\">\n          <div className={'full-page ' + this.getFullPageName(routes)}>\n            <Switch>{this.getRoutes(routes)}</Switch>\n            <Footer fluid />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AuthLayout;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nexport const PrivateRoute = ({component: Component, ...rest}) => (\n  <Route\n    {...rest}\n    render={props =>\n      localStorage.getItem('user') ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{pathname: '/auth/login', state: {from: props.location}}}\n        />\n      )\n    }\n  />\n);\n","import React from 'react';\nimport {Redirect, Route, Router, Switch} from 'react-router-dom';\nimport {alertActions} from 'actions';\nimport {AdminLayout} from 'layouts/Admin/Admin.js';\nimport AuthLayout from 'layouts/Auth/Auth.js';\nimport {PrivateRoute} from 'components';\nimport {connect} from 'react-redux';\nimport {history} from 'helpers';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    history.listen(() => {\n      this.props.clearAlerts();\n    });\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n          <PrivateRoute path=\"/admin/\" component={AdminLayout} />\n          <Redirect from=\"*\" to=\"/admin/boxed-products\" />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nconst actionCreators = {\n  clearAlerts: alertActions.clear,\n};\n\nconst connectedApp = connect(null, actionCreators)(App);\nexport {connectedApp as App};\n","import React from 'react';\nimport {App} from './App.js';\nimport {Provider} from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport {store} from 'helpers';\n\nimport 'assets/css/nucleo-icons.css';\nimport 'react-notification-alert/dist/animate.css';\nimport 'assets/css/black-dashboard-pro-react.css';\nimport 'assets/css/style.css';\nimport 'react-notification-alert/dist/animate.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}